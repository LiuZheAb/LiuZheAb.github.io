{"version":3,"sources":["components/Documents/GOJS/0.js","components/Directory/index.js"],"names":["Meta","data","name","url","overview","index","props","state","articleTree","getArticleTree","bind","childrens","document","getElementsByClassName","children","i","length","nodeName","id","innerText","push","tag","this","setState","diagramRender","$","go","GraphObject","make","Diagram","model","GraphLinksModel","key","from","to","className","style","height","href","target","rel","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","item","Item","hoverable","cover","src","require","alt","title","Component","bindHandleScroll","event","scrollTop","srcElement","documentElement","window","pageYOffset","body","scrollToAnchor","anchorName","anchorElement","getElementById","scrollIntoView","block","behavior","header","before","scrollY","directory","offsetTop","addEventListener","onscroll","footer","H","offsetParent","s","offsetHeight","after","removeEventListener","array","targetObj","targetIndex","findIndex","n","map","paddingLeft","onClick","nextProps","prevState"],"mappings":"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","file":"static/js/45.786cbf4f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Directory from \"../../Directory\";\r\nimport { List, Card } from 'antd';\r\nimport go from \"gojs\";\r\nconst { Meta } = Card;\r\n\r\nconst data = [\r\n    {\r\n        name: '最简单的例子',\r\n        url: 'minimal.html',\r\n        overview: 'minimal.png',\r\n    }, {\r\n        name: '流程图',\r\n        url: 'flowchart.html',\r\n        overview: 'flowchart.png',\r\n    }, {\r\n        name: '思维导图',\r\n        url: 'mindMap.html',\r\n        overview: 'mindMap.png',\r\n    }, {\r\n        name: '逻辑电路',\r\n        url: 'logicCircuit.html',\r\n        overview: 'logicCircuit.png',\r\n    }, {\r\n        name: '比赛流程图',\r\n        url: 'tournament.html',\r\n        overview: 'tournament.png',\r\n    }, {\r\n        name: '甘特图',\r\n        url: 'gantt.html',\r\n        overview: 'gantt.png',\r\n    }, {\r\n        name: '树形控件',\r\n        url: 'treeView.html',\r\n        overview: 'treeView.png',\r\n    }, {\r\n        name: '树映射器',\r\n        url: 'treeMapper.html',\r\n        overview: 'treeMapper.png',\r\n    }, {\r\n        name: 'DOM 树',\r\n        url: 'DOMTree.html',\r\n        overview: 'DOMTree.png',\r\n    }, {\r\n        name: '仪表控件',\r\n        url: 'controlGauges.html',\r\n        overview: 'controlGauges.png',\r\n    }, {\r\n        name: '词云',\r\n        url: 'wordcloud.html',\r\n        overview: 'wordcloud.png',\r\n    }, {\r\n        name: '数据可视化',\r\n        url: 'dataVisualization.html',\r\n        overview: 'dataVisualization.png',\r\n    }\r\n];\r\n\r\nexport default class index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            articleTree: []\r\n        };\r\n        this.getArticleTree = this.getArticleTree.bind(this);\r\n    }\r\n    getArticleTree() {\r\n        let childrens = document.getElementsByClassName(\"article-content\")[0].children;\r\n        let articleTree = [];\r\n        for (let i = 0; i < childrens.length - 1; i++) {\r\n            let nodeName = childrens[i].nodeName;\r\n            if (nodeName === \"H2\" || nodeName === \"H3\") {\r\n                childrens[i].id = childrens[i].innerText;\r\n                articleTree.push({\r\n                    name: childrens[i].innerText,\r\n                    tag: childrens[i].nodeName\r\n                });\r\n            }\r\n        }\r\n        this.setState({ articleTree });\r\n    }\r\n    componentDidMount() {\r\n        this.getArticleTree();\r\n        this.diagramRender();\r\n    }\r\n    diagramRender() {\r\n        let $ = go.GraphObject.make;\r\n        let myDiagram = $(go.Diagram, \"myDiagramDiv\");\r\n        myDiagram.model = new go.GraphLinksModel([{ key: \"Hello\" }, { key: \"World!\" }], [{ from: \"Hello\", to: \"World!\" }]);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"page-content\">\r\n                <div className=\"article\">\r\n                    <div className=\"article-title\">\r\n                        <h1>写在前面</h1>\r\n                    </div>\r\n                    <div id=\"myDiagramDiv\" className=\"diagram\" style={{ height: 150 }}></div>\r\n                    <div className=\"article-content\">\r\n                        <h2>教程简介</h2>\r\n                        <p className=\"indent-2\">本教程仅供GoJS初学者观看使用。</p>\r\n                        <p className=\"indent-2\">本教程是参考官方文档、教程等资料进行归纳整理,由于资料均为英文,理解可能出现偏差,以官方为准。</p>\r\n                        <p className=\"indent-2\">教程只是将GoJS中常用的功能API做简要概述,更详细的内容还需查看官方的<a href=\"https://gojs.net/latest/api/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">API文档</a>。</p>\r\n                        <h2>GoJS绘图组件介绍</h2>\r\n                        <p className=\"indent-2\">详情请看<a href=\"https://gojs.net/latest/intro/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">GoJS Intro</a></p>\r\n                        <h2>GoJS样例</h2>\r\n                        <p>以下是一些典型样例</p>\r\n                        <List\r\n                            grid={{\r\n                                gutter: 10,\r\n                                xs: 2,\r\n                                sm: 3,\r\n                                md: 3,\r\n                                lg: 3,\r\n                                xl: 4,\r\n                                xxl: 4,\r\n                            }}\r\n                            dataSource={data}\r\n                            renderItem={item => (\r\n                                <List.Item>\r\n                                    <a href={\"https://gojs.net/latest/samples/\" + item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        <Card\r\n                                            hoverable\r\n                                            cover={<img src={require(\"../../../assets/images/\" + item.overview)} alt=\"\" />}\r\n                                        >\r\n                                            <Meta title={item.name} />\r\n                                        </Card>\r\n                                    </a>\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                        <p className=\"indent-2\">更多样例请查看<a href=\"https://gojs.net/latest/samples/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">GoJS Samples</a></p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"directory\">\r\n                    <Directory articleTree={this.state.articleTree}></Directory>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","//文档右侧标题导航\r\nimport React, { Component, } from 'react';\r\nimport \"./index.less\";\r\n\r\nexport default class index extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            articleTree: this.props.articleTree,\r\n            scrollTop: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        //页面滚动到文档末尾时，将directory逐渐向上隐藏\r\n        let header = document.getElementById(\"header\");\r\n        let before = window.scrollY;\r\n        let directory = document.getElementsByClassName(\"directory-list\")[0];\r\n        //offsetTop为页面加载时directory距顶端的距离\r\n        let offsetTop = directory.offsetTop;\r\n        window.addEventListener('scroll', this.bindHandleScroll);\r\n        window.onscroll = function () {\r\n            let footer = document.getElementsByClassName(\"page-footer\")[0], H = 0;\r\n            while (footer) {\r\n                //H为footer距顶端的距离\r\n                H += footer.offsetTop;\r\n                footer = footer.offsetParent;\r\n            }\r\n            let s = document.body.scrollTop || document.documentElement.scrollTop;\r\n            //s为当前滚动距离加offsetTop加directory高度,即directory底端距顶部的距离\r\n            s = s + (offsetTop + directory.offsetHeight);\r\n            //当s超出H时,directory向上收起\r\n            if (s > H + header.offsetHeight) {\r\n                directory.style = `position:fixed;top:${offsetTop - s + H}px;transition:none`;\r\n            } else {\r\n                // 在s<=H时,若向下滚动时,滚动距离超过header高度将header收起;向上滚动则将header显示,并且directory随header平移\r\n                let after = window.scrollY;\r\n                if (after > header.offsetHeight) {\r\n                    if (before < after) {\r\n                        header.className = \"ant-layout-header header header-affixed\";\r\n                        directory.className = \"directory-list directory-affixed\"\r\n                        before = after;\r\n                    };\r\n                    if (before > after) {\r\n                        header.className = \"ant-layout-header header header-visible\";\r\n                        directory.className = \"directory-list\"\r\n                        before = after;\r\n                    };\r\n                }\r\n                directory.style = \"\";\r\n            }\r\n        }\r\n    }\r\n    //获取滚动条滚动的高度\r\n    bindHandleScroll = (event) => {\r\n        const scrollTop = (event.srcElement ? event.srcElement.documentElement.scrollTop : false)\r\n            || window.pageYOffset\r\n            || (event.srcElement ? event.srcElement.body.scrollTop : 0);\r\n        this.setState({ scrollTop });\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.bindHandleScroll);\r\n    }\r\n    //点击directory跳转到锚点\r\n    scrollToAnchor = (anchorName) => {\r\n        if (anchorName) {\r\n            let anchorElement = document.getElementById(anchorName);\r\n            if (anchorElement) {\r\n                anchorElement.scrollIntoView({\r\n                    block: 'start',\r\n                    behavior: 'smooth'\r\n                });\r\n            }\r\n        }\r\n    }\r\n    //当props发生变化时改变articleTree\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        const { articleTree } = nextProps;\r\n        if (articleTree !== prevState.articleTree) {\r\n            return {\r\n                articleTree,\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        let { articleTree, scrollTop } = this.state;\r\n        let length = articleTree.length;\r\n        if (document.getElementById(`tree-num-0`) && length > 0) {\r\n            let array = [];\r\n            //array内为所有锚点的offsetTop,从小到大排列\r\n            for (let i = 0; i < length; i++) {\r\n                let targetObj = document.getElementById(articleTree[i].name);\r\n                array.push(targetObj.offsetTop);\r\n            }\r\n            //targetIndex为array中第一个大于当前滚动距离的值的index,通过offsetTop判断当前滚动到哪个锚点,并改变对应的标题导航样式。\r\n            let targetIndex = array.findIndex((n) => n > scrollTop) - 1;\r\n            for (let i = 0; i < length; i++) {\r\n                i === targetIndex ? document.getElementById(`tree-num-${i}`).className = \"tree-num directory-item-active\" : document.getElementById(`tree-num-${i}`).className = \"tree-num\";\r\n            }\r\n            //当滚动距离超过最后一个锚点时,array中找不到,返回-1\r\n            if (targetIndex === -2) {\r\n                document.getElementById(`tree-num-${length - 1}`).className = \"tree-num directory-item-active\";\r\n            }\r\n        }\r\n        return (\r\n            <ul className=\"directory-list\">\r\n                {articleTree.map((key, index) => {\r\n                    return (\r\n                        <li key={index} id={`tree-num-${index}`} className=\"tree-num\" title={key.name} style={{ paddingLeft: key.tag === \"H2\" ? 10 : 22 }} onClick={() => { this.scrollToAnchor(`${key.name}`) }}>{key.name}</li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}