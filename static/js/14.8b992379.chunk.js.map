{"version":3,"sources":["../node_modules/codemirror/addon/mode/overlay.js","../node_modules/codemirror/mode/django/django.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js"],"names":["CodeMirror","overlayMode","base","overlay","combine","startState","basePos","baseCur","overlayPos","overlayCur","streamSeen","copyState","state","token","stream","Math","min","start","pos","combineTokens","indent","textAfter","line","electricChars","innerMode","mode","blankLine","baseToken","overlayToken","mod","require","defineMode","keywords","filters","operators","wordOperators","tokenBase","match","tokenize","inVariable","inTag","inComment","next","inString","delimiter","previousTokenizer","escapeNext","eat","waitDot","peek","waitProperty","Error","waitPipe","waitFilter","eatSpace","foundVariable","keywordMatch","blockCommentTag","inBlockComment","skipToEnd","RegExp","join","blockCommentStart","blockCommentEnd","config","htmlBase","getMode","djangoInner","defineMIME","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","indentUnit","defaults","htmlMode","prop","inText","chain","parser","ch","inBlock","eatWhile","doctype","depth","baseState","tagName","tagStart","test","quote","closure","eol","isInAttribute","inAttribute","stringStartCol","column","style","terminator","Context","startOfLine","this","prev","context","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","sol","indentation","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","configuration","helperType","skipAttribute","xmlCurrentTag","name","close","xmlCurrentContext","cx","push","reverse","mimeModes","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","regexp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","parserConfig","tags","configTags","configScript","scriptTypes","matches","html","htmlState","toLowerCase","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","search","backUp","maybeBackup","local"],"mappings":"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","file":"static/js/14.8b992379.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter, line) {\n      return base.indent(state.base, textAfter, line);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"),\n        require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\",\n            \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"django:inner\", function() {\n    var keywords = [\"block\", \"endblock\", \"for\", \"endfor\", \"true\", \"false\", \"filter\", \"endfilter\",\n                    \"loop\", \"none\", \"self\", \"super\", \"if\", \"elif\", \"endif\", \"as\", \"else\", \"import\",\n                    \"with\", \"endwith\", \"without\", \"context\", \"ifequal\", \"endifequal\", \"ifnotequal\",\n                    \"endifnotequal\", \"extends\", \"include\", \"load\", \"comment\", \"endcomment\",\n                    \"empty\", \"url\", \"static\", \"trans\", \"blocktrans\", \"endblocktrans\", \"now\",\n                    \"regroup\", \"lorem\", \"ifchanged\", \"endifchanged\", \"firstof\", \"debug\", \"cycle\",\n                    \"csrf_token\", \"autoescape\", \"endautoescape\", \"spaceless\", \"endspaceless\",\n                    \"ssi\", \"templatetag\", \"verbatim\", \"endverbatim\", \"widthratio\"],\n        filters = [\"add\", \"addslashes\", \"capfirst\", \"center\", \"cut\", \"date\",\n                   \"default\", \"default_if_none\", \"dictsort\",\n                   \"dictsortreversed\", \"divisibleby\", \"escape\", \"escapejs\",\n                   \"filesizeformat\", \"first\", \"floatformat\", \"force_escape\",\n                   \"get_digit\", \"iriencode\", \"join\", \"last\", \"length\",\n                   \"length_is\", \"linebreaks\", \"linebreaksbr\", \"linenumbers\",\n                   \"ljust\", \"lower\", \"make_list\", \"phone2numeric\", \"pluralize\",\n                   \"pprint\", \"random\", \"removetags\", \"rjust\", \"safe\",\n                   \"safeseq\", \"slice\", \"slugify\", \"stringformat\", \"striptags\",\n                   \"time\", \"timesince\", \"timeuntil\", \"title\", \"truncatechars\",\n                   \"truncatechars_html\", \"truncatewords\", \"truncatewords_html\",\n                   \"unordered_list\", \"upper\", \"urlencode\", \"urlize\",\n                   \"urlizetrunc\", \"wordcount\", \"wordwrap\", \"yesno\"],\n        operators = [\"==\", \"!=\", \"<\", \">\", \"<=\", \">=\"],\n        wordOperators = [\"in\", \"not\", \"or\", \"and\"];\n\n    keywords = new RegExp(\"^\\\\b(\" + keywords.join(\"|\") + \")\\\\b\");\n    filters = new RegExp(\"^\\\\b(\" + filters.join(\"|\") + \")\\\\b\");\n    operators = new RegExp(\"^\\\\b(\" + operators.join(\"|\") + \")\\\\b\");\n    wordOperators = new RegExp(\"^\\\\b(\" + wordOperators.join(\"|\") + \")\\\\b\");\n\n    // We have to return \"null\" instead of null, in order to avoid string\n    // styling as the default, when using Django templates inside HTML\n    // element attributes\n    function tokenBase (stream, state) {\n      // Attempt to identify a variable, template or comment tag respectively\n      if (stream.match(\"{{\")) {\n        state.tokenize = inVariable;\n        return \"tag\";\n      } else if (stream.match(\"{%\")) {\n        state.tokenize = inTag;\n        return \"tag\";\n      } else if (stream.match(\"{#\")) {\n        state.tokenize = inComment;\n        return \"comment\";\n      }\n\n      // Ignore completely any stream series that do not match the\n      // Django template opening tags.\n      while (stream.next() != null && !stream.match(/\\{[{%#]/, false)) {}\n      return null;\n    }\n\n    // A string can be included in either single or double quotes (this is\n    // the delimiter). Mark everything as a string until the start delimiter\n    // occurs again.\n    function inString (delimiter, previousTokenizer) {\n      return function (stream, state) {\n        if (!state.escapeNext && stream.eat(delimiter)) {\n          state.tokenize = previousTokenizer;\n        } else {\n          if (state.escapeNext) {\n            state.escapeNext = false;\n          }\n\n          var ch = stream.next();\n\n          // Take into account the backslash for escaping characters, such as\n          // the string delimiter.\n          if (ch == \"\\\\\") {\n            state.escapeNext = true;\n          }\n        }\n\n        return \"string\";\n      };\n    }\n\n    // Apply Django template variable syntax highlighting\n    function inVariable (stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        }\n\n        // Dot followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for property.\");\n        }\n      }\n\n      // Attempt to match a pipe that precedes a filter\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        }\n\n        // Pipe followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for filter.\");\n        }\n      }\n\n      // Highlight properties\n      if (state.waitProperty) {\n        state.waitProperty = false;\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true;  // A property can be followed by another property\n          state.waitPipe = true;  // A property can be followed by a filter\n          return \"property\";\n        }\n      }\n\n      // Highlight filters\n      if (state.waitFilter) {\n          state.waitFilter = false;\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      }\n\n      // Ignore all white spaces\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      }\n\n      // Identify numbers\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      }\n\n      // Identify strings\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      }\n\n      // Attempt to find the variable\n      if (stream.match(/\\b(\\w+)\\b/) && !state.foundVariable) {\n        state.waitDot = true;\n        state.waitPipe = true;  // A property can be followed by a filter\n        return \"variable\";\n      }\n\n      // If found closing tag reset\n      if (stream.match(\"}}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        state.tokenize = tokenBase;\n        return \"tag\";\n      }\n\n      // If nothing was found, advance to the next character\n      stream.next();\n      return \"null\";\n    }\n\n    function inTag (stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        }\n\n        // Dot followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for property.\");\n        }\n      }\n\n      // Attempt to match a pipe that precedes a filter\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        }\n\n        // Pipe followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for filter.\");\n        }\n      }\n\n      // Highlight properties\n      if (state.waitProperty) {\n        state.waitProperty = false;\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true;  // A property can be followed by another property\n          state.waitPipe = true;  // A property can be followed by a filter\n          return \"property\";\n        }\n      }\n\n      // Highlight filters\n      if (state.waitFilter) {\n          state.waitFilter = false;\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      }\n\n      // Ignore all white spaces\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      }\n\n      // Identify numbers\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      }\n\n      // Identify strings\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      }\n\n      // Attempt to match an operator\n      if (stream.match(operators)) {\n        return \"operator\";\n      }\n\n      // Attempt to match a word operator\n      if (stream.match(wordOperators)) {\n        return \"keyword\";\n      }\n\n      // Attempt to match a keyword\n      var keywordMatch = stream.match(keywords);\n      if (keywordMatch) {\n        if (keywordMatch[0] == \"comment\") {\n          state.blockCommentTag = true;\n        }\n        return \"keyword\";\n      }\n\n      // Attempt to match a variable\n      if (stream.match(/\\b(\\w+)\\b/)) {\n        state.waitDot = true;\n        state.waitPipe = true;  // A property can be followed by a filter\n        return \"variable\";\n      }\n\n      // If found closing tag reset\n      if (stream.match(\"%}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        // If the tag that closes is a block comment tag, we want to mark the\n        // following code as comment, until the tag closes.\n        if (state.blockCommentTag) {\n          state.blockCommentTag = false;  // Release the \"lock\"\n          state.tokenize = inBlockComment;\n        } else {\n          state.tokenize = tokenBase;\n        }\n        return \"tag\";\n      }\n\n      // If nothing was found, advance to the next character\n      stream.next();\n      return \"null\";\n    }\n\n    // Mark everything as comment inside the tag and the tag itself.\n    function inComment (stream, state) {\n      if (stream.match(/^.*?#\\}/)) state.tokenize = tokenBase\n      else stream.skipToEnd()\n      return \"comment\";\n    }\n\n    // Mark everything as a comment until the `blockcomment` tag closes.\n    function inBlockComment (stream, state) {\n      if (stream.match(/\\{%\\s*endcomment\\s*%\\}/, false)) {\n        state.tokenize = inTag;\n        stream.match(\"{%\");\n        return \"tag\";\n      } else {\n        stream.next();\n        return \"comment\";\n      }\n    }\n\n    return {\n      startState: function () {\n        return {tokenize: tokenBase};\n      },\n      token: function (stream, state) {\n        return state.tokenize(stream, state);\n      },\n      blockCommentStart: \"{% comment %}\",\n      blockCommentEnd: \"{% endcomment %}\"\n    };\n  });\n\n  CodeMirror.defineMode(\"django\", function(config) {\n    var htmlBase = CodeMirror.getMode(config, \"text/html\");\n    var djangoInner = CodeMirror.getMode(config, \"django:inner\");\n    return CodeMirror.overlayMode(htmlBase, djangoInner);\n  });\n\n  CodeMirror.defineMIME(\"text/x-django\", \"django\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        if (cx.tagName) context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n"],"sourceRoot":""}