{"version":3,"sources":["../node_modules/codemirror/mode/ruby/ruby.js","../node_modules/codemirror/mode/slim/slim.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js"],"names":["CodeMirror","defineMode","config","wordObj","words","o","i","e","length","curPunc","keywords","indentWords","dedentWords","opening","closing","chain","newtok","stream","state","tokenize","push","tokenBase","sol","match","eol","readBlockComment","eatSpace","m","phrase","mayIndent","ch","next","readQuoted","start","pos","depth","found","escaped","indexOf","backUp","regexpAhead","style","embed","eat","delim","propertyIsEnumerable","skipToEnd","pop","eatWhile","test","varList","lastTok","more","tokenBaseUntilBrace","peek","tokenBaseOnce","alreadyCalled","quote","unescaped","context","type","prev","startState","indented","indentUnit","continuedLine","token","indentation","kwtype","thisTok","word","current","column","indent","textAfter","Pass","firstChar","charAt","ct","closed","electricInput","lineComment","fold","defineMIME","mod","require","htmlMode","getMode","name","rubyMode","modes","html","ruby","embedded","javascript","css","sass","scss","less","styl","coffee","asciidoc","markdown","textile","creole","wiki","mediawiki","rdoc","builder","nokogiri","erb","embeddedRegexp","map","arr","key","RegExp","join","styleMap","nameStartChar","nameChar","nameRegexp","attributeNameRegexp","wrappedAttributeNameRegexp","classNameRegexp","classIdRegexp","continueLine","stack","parent","line","finishContinue","rubyInQuote","endQuote","rubyState","startRubySplat","runSplat","pat","offset","cur","idx","search","restore","backup","maybeBackup","htmlState","startHtmlLine","lastTokenize","htmlLine","startHtmlMode","comment","attributeWrapper","attributeWrapperAssign","attributeWrapperValue","sub","subStream","StringStream","string","slice","tabSize","lastColumnPos","lastColumnValue","subMode","subState","firstSub","mode","hasOwnProperty","query","spec","mimeModes","factory","createMode","doctypeLine","_state","startLine","commentMode","lineContinuable","startSubMode","slimTag","slim","startOfLine","slimTagExtras","slimClass","slimAttribute","startAttributeWrapperMode","$1","slimAttributeAssign","slimContent","slimAttributeValue","slimAttributeSymbols","nextTokenize","fresh","last","copyState","blankLine","innerMode","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","setStyle","defaults","prop","inText","parser","inBlock","doctype","inTag","baseState","tagName","tagStart","closure","isInAttribute","inAttribute","stringStartCol","terminator","Context","this","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","fullLine","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","close","xmlCurrentContext","cx","reverse","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","regexp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","tag","dest","source","unshift","parserConfig","tags","configTags","configScript","scriptTypes","matches","toLowerCase","modeSpec","tagInfo","tagText","findMatchingMode","endTagA","endTag","localState","localMode","local"],"mappings":"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","file":"static/js/18.39e69977.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  function wordObj(words) {\n    var o = {};\n    for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n    return o;\n  }\n  var keywords = wordObj([\n    \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n    \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n    \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n    \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n    \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n    \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n  ]);\n  var indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\",\n                             \"catch\", \"loop\", \"proc\", \"begin\"]);\n  var dedentWords = wordObj([\"end\", \"until\"]);\n  var opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\n  var closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[2], m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase, mayIndent) {\n    return function(stream, state) {\n      if (mayIndent) stream.eatSpace()\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closed ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Slim Highlighting for CodeMirror copyright (c) HicknHack Software Gmbh\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\n  CodeMirror.defineMode(\"slim\", function(config) {\n    var htmlMode = CodeMirror.getMode(config, {name: \"htmlmixed\"});\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n    var modes = { html: htmlMode, ruby: rubyMode };\n    var embedded = {\n      ruby: \"ruby\",\n      javascript: \"javascript\",\n      css: \"text/css\",\n      sass: \"text/x-sass\",\n      scss: \"text/x-scss\",\n      less: \"text/x-less\",\n      styl: \"text/x-styl\", // no highlighting so far\n      coffee: \"coffeescript\",\n      asciidoc: \"text/x-asciidoc\",\n      markdown: \"text/x-markdown\",\n      textile: \"text/x-textile\", // no highlighting so far\n      creole: \"text/x-creole\", // no highlighting so far\n      wiki: \"text/x-wiki\", // no highlighting so far\n      mediawiki: \"text/x-mediawiki\", // no highlighting so far\n      rdoc: \"text/x-rdoc\", // no highlighting so far\n      builder: \"text/x-builder\", // no highlighting so far\n      nokogiri: \"text/x-nokogiri\", // no highlighting so far\n      erb: \"application/x-erb\"\n    };\n    var embeddedRegexp = function(map){\n      var arr = [];\n      for(var key in map) arr.push(key);\n      return new RegExp(\"^(\"+arr.join('|')+\"):\");\n    }(embedded);\n\n    var styleMap = {\n      \"commentLine\": \"comment\",\n      \"slimSwitch\": \"operator special\",\n      \"slimTag\": \"tag\",\n      \"slimId\": \"attribute def\",\n      \"slimClass\": \"attribute qualifier\",\n      \"slimAttribute\": \"attribute\",\n      \"slimSubmode\": \"keyword special\",\n      \"closeAttributeTag\": null,\n      \"slimDoctype\": null,\n      \"lineContinuation\": null\n    };\n    var closing = {\n      \"{\": \"}\",\n      \"[\": \"]\",\n      \"(\": \")\"\n    };\n\n    var nameStartChar = \"_a-zA-Z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\n    var nameChar = nameStartChar + \"\\\\-0-9\\xB7\\u0300-\\u036F\\u203F-\\u2040\";\n    var nameRegexp = new RegExp(\"^[:\"+nameStartChar+\"](?::[\"+nameChar+\"]|[\"+nameChar+\"]*)\");\n    var attributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*(?=\\\\s*=)\");\n    var wrappedAttributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*\");\n    var classNameRegexp = /^\\.-?[_a-zA-Z]+[\\w\\-]*/;\n    var classIdRegexp = /^#[_a-zA-Z]+[\\w\\-]*/;\n\n    function backup(pos, tokenize, style) {\n      var restore = function(stream, state) {\n        state.tokenize = tokenize;\n        if (stream.pos < pos) {\n          stream.pos = pos;\n          return style;\n        }\n        return state.tokenize(stream, state);\n      };\n      return function(stream, state) {\n        state.tokenize = restore;\n        return tokenize(stream, state);\n      };\n    }\n\n    function maybeBackup(stream, state, pat, offset, style) {\n      var cur = stream.current();\n      var idx = cur.search(pat);\n      if (idx > -1) {\n        state.tokenize = backup(stream.pos, state.tokenize, style);\n        stream.backUp(cur.length - idx - offset);\n      }\n      return style;\n    }\n\n    function continueLine(state, column) {\n      state.stack = {\n        parent: state.stack,\n        style: \"continuation\",\n        indented: column,\n        tokenize: state.line\n      };\n      state.line = state.tokenize;\n    }\n    function finishContinue(state) {\n      if (state.line == state.tokenize) {\n        state.line = state.stack.tokenize;\n        state.stack = state.stack.parent;\n      }\n    }\n\n    function lineContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        if (stream.match(/^\\\\$/)) {\n          continueLine(state, column);\n          return \"lineContinuation\";\n        }\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/(?:^|[^\\\\])(?:\\\\\\\\)*\\\\$/)) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function commaContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/,$/)) {\n          continueLine(state, column);\n        }\n        return style;\n      };\n    }\n\n    function rubyInQuote(endQuote, tokenize) {\n      // TODO: add multi line support\n      return function(stream, state) {\n        var ch = stream.peek();\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = tokenize;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n    function startRubySplat(tokenize) {\n      var rubyState;\n      var runSplat = function(stream, state) {\n        if (state.rubyState.tokenize.length == 1 && !state.rubyState.context.prev) {\n          stream.backUp(1);\n          if (stream.eatSpace()) {\n            state.rubyState = rubyState;\n            state.tokenize = tokenize;\n            return tokenize(stream, state);\n          }\n          stream.next();\n        }\n        return ruby(stream, state);\n      };\n      return function(stream, state) {\n        rubyState = state.rubyState;\n        state.rubyState = CodeMirror.startState(rubyMode);\n        state.tokenize = runSplat;\n        return ruby(stream, state);\n      };\n    }\n\n    function ruby(stream, state) {\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function htmlLine(stream, state) {\n      if (stream.match(/^\\\\$/)) {\n        return \"lineContinuation\";\n      }\n      return html(stream, state);\n    }\n    function html(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      return maybeBackup(stream, state, /[^\\\\]#\\{/, 1, htmlMode.token(stream, state.htmlState));\n    }\n\n    function startHtmlLine(lastTokenize) {\n      return function(stream, state) {\n        var style = htmlLine(stream, state);\n        if (stream.eol()) state.tokenize = lastTokenize;\n        return style;\n      };\n    }\n\n    function startHtmlMode(stream, state, offset) {\n      state.stack = {\n        parent: state.stack,\n        style: \"html\",\n        indented: stream.column() + offset, // pipe + space\n        tokenize: state.line\n      };\n      state.line = state.tokenize = html;\n      return null;\n    }\n\n    function comment(stream, state) {\n      stream.skipToEnd();\n      return state.stack.style;\n    }\n\n    function commentMode(stream, state) {\n      state.stack = {\n        parent: state.stack,\n        style: \"comment\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = comment;\n      return comment(stream, state);\n    }\n\n    function attributeWrapper(stream, state) {\n      if (stream.eat(state.stack.endQuote)) {\n        state.line = state.stack.line;\n        state.tokenize = state.stack.tokenize;\n        state.stack = state.stack.parent;\n        return null;\n      }\n      if (stream.match(wrappedAttributeNameRegexp)) {\n        state.tokenize = attributeWrapperAssign;\n        return \"slimAttribute\";\n      }\n      stream.next();\n      return null;\n    }\n    function attributeWrapperAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = attributeWrapperValue;\n        return null;\n      }\n      return attributeWrapper(stream, state);\n    }\n    function attributeWrapperValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, attributeWrapper);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(attributeWrapper)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = attributeWrapper;\n        return \"keyword\";\n      }\n      return startRubySplat(attributeWrapper)(stream, state);\n    }\n\n    function startAttributeWrapperMode(state, endQuote, tokenize) {\n      state.stack = {\n        parent: state.stack,\n        style: \"wrapper\",\n        indented: state.indented + 1,\n        tokenize: tokenize,\n        line: state.line,\n        endQuote: endQuote\n      };\n      state.line = state.tokenize = attributeWrapper;\n      return null;\n    }\n\n    function sub(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      var subStream = new CodeMirror.StringStream(stream.string.slice(state.stack.indented), stream.tabSize);\n      subStream.pos = stream.pos - state.stack.indented;\n      subStream.start = stream.start - state.stack.indented;\n      subStream.lastColumnPos = stream.lastColumnPos - state.stack.indented;\n      subStream.lastColumnValue = stream.lastColumnValue - state.stack.indented;\n      var style = state.subMode.token(subStream, state.subState);\n      stream.pos = subStream.pos + state.stack.indented;\n      return style;\n    }\n    function firstSub(stream, state) {\n      state.stack.indented = stream.column();\n      state.line = state.tokenize = sub;\n      return state.tokenize(stream, state);\n    }\n\n    function createMode(mode) {\n      var query = embedded[mode];\n      var spec = CodeMirror.mimeModes[query];\n      if (spec) {\n        return CodeMirror.getMode(config, spec);\n      }\n      var factory = CodeMirror.modes[query];\n      if (factory) {\n        return factory(config, {name: query});\n      }\n      return CodeMirror.getMode(config, \"null\");\n    }\n\n    function getMode(mode) {\n      if (!modes.hasOwnProperty(mode)) {\n        return modes[mode] = createMode(mode);\n      }\n      return modes[mode];\n    }\n\n    function startSubMode(mode, state) {\n      var subMode = getMode(mode);\n      var subState = CodeMirror.startState(subMode);\n\n      state.subMode = subMode;\n      state.subState = subState;\n\n      state.stack = {\n        parent: state.stack,\n        style: \"sub\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = state.tokenize = firstSub;\n      return \"slimSubmode\";\n    }\n\n    function doctypeLine(stream, _state) {\n      stream.skipToEnd();\n      return \"slimDoctype\";\n    }\n\n    function startLine(stream, state) {\n      var ch = stream.peek();\n      if (ch == '<') {\n        return (state.tokenize = startHtmlLine(state.tokenize))(stream, state);\n      }\n      if (stream.match(/^[|']/)) {\n        return startHtmlMode(stream, state, 1);\n      }\n      if (stream.match(/^\\/(!|\\[\\w+])?/)) {\n        return commentMode(stream, state);\n      }\n      if (stream.match(/^(-|==?[<>]?)/)) {\n        state.tokenize = lineContinuable(stream.column(), commaContinuable(stream.column(), ruby));\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^doctype\\b/)) {\n        state.tokenize = doctypeLine;\n        return \"keyword\";\n      }\n\n      var m = stream.match(embeddedRegexp);\n      if (m) {\n        return startSubMode(m[1], state);\n      }\n\n      return slimTag(stream, state);\n    }\n\n    function slim(stream, state) {\n      if (state.startOfLine) {\n        return startLine(stream, state);\n      }\n      return slimTag(stream, state);\n    }\n\n    function slimTag(stream, state) {\n      if (stream.eat('*')) {\n        state.tokenize = startRubySplat(slimTagExtras);\n        return null;\n      }\n      if (stream.match(nameRegexp)) {\n        state.tokenize = slimTagExtras;\n        return \"slimTag\";\n      }\n      return slimClass(stream, state);\n    }\n    function slimTagExtras(stream, state) {\n      if (stream.match(/^(<>?|><?)/)) {\n        state.tokenize = slimClass;\n        return null;\n      }\n      return slimClass(stream, state);\n    }\n    function slimClass(stream, state) {\n      if (stream.match(classIdRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimId\";\n      }\n      if (stream.match(classNameRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimClass\";\n      }\n      return slimAttribute(stream, state);\n    }\n    function slimAttribute(stream, state) {\n      if (stream.match(/^([\\[\\{\\(])/)) {\n        return startAttributeWrapperMode(state, closing[RegExp.$1], slimAttribute);\n      }\n      if (stream.match(attributeNameRegexp)) {\n        state.tokenize = slimAttributeAssign;\n        return \"slimAttribute\";\n      }\n      if (stream.peek() == '*') {\n        stream.next();\n        state.tokenize = startRubySplat(slimContent);\n        return null;\n      }\n      return slimContent(stream, state);\n    }\n    function slimAttributeAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = slimAttributeValue;\n        return null;\n      }\n      // should never happen, because of forward lookup\n      return slimAttribute(stream, state);\n    }\n\n    function slimAttributeValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, slimAttribute);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(slimAttribute)(stream, state);\n      }\n      if (ch == ':') {\n        return startRubySplat(slimAttributeSymbols)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = slimAttribute;\n        return \"keyword\";\n      }\n      return startRubySplat(slimAttribute)(stream, state);\n    }\n    function slimAttributeSymbols(stream, state) {\n      stream.backUp(1);\n      if (stream.match(/^[^\\s],(?=:)/)) {\n        state.tokenize = startRubySplat(slimAttributeSymbols);\n        return null;\n      }\n      stream.next();\n      return slimAttribute(stream, state);\n    }\n    function readQuoted(quote, style, embed, unescaped, nextTokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var fresh = stream.current().length == 0;\n        if (stream.match(/^\\\\$/, fresh)) {\n          if (!fresh) return style;\n          continueLine(state, state.indented);\n          return \"lineContinuation\";\n        }\n        if (stream.match(/^#\\{/, fresh)) {\n          if (!fresh) return style;\n          state.tokenize = rubyInQuote(\"}\", state.tokenize);\n          return null;\n        }\n        var escaped = false, ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize = nextTokenize;\n            break;\n          }\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              stream.backUp(2);\n              break;\n            }\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (stream.eol() && escaped) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function slimContent(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = ruby;\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^\\/$/)) { // tag close hint\n        state.tokenize = slim;\n        return null;\n      }\n      if (stream.match(/^:/)) { // inline tag\n        state.tokenize = slimTag;\n        return \"slimSwitch\";\n      }\n      startHtmlMode(stream, state, 0);\n      return state.tokenize(stream, state);\n    }\n\n    var mode = {\n      // default to html mode\n      startState: function() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          stack: null,\n          last: null,\n          tokenize: slim,\n          line: slim,\n          indented: 0\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          htmlState : CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          subMode: state.subMode,\n          subState: state.subMode && CodeMirror.copyState(state.subMode, state.subState),\n          stack: state.stack,\n          last: state.last,\n          tokenize: state.tokenize,\n          line: state.line\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n          state.tokenize = state.line;\n          while (state.stack && state.stack.indented > state.indented && state.last != \"slimSubmode\") {\n            state.line = state.tokenize = state.stack.tokenize;\n            state.stack = state.stack.parent;\n            state.subMode = null;\n            state.subState = null;\n          }\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        if (style) state.last = style;\n        return styleMap.hasOwnProperty(style) ? styleMap[style] : style;\n      },\n\n      blankLine: function(state) {\n        if (state.subMode && state.subMode.blankLine) {\n          return state.subMode.blankLine(state.subState);\n        }\n      },\n\n      innerMode: function(state) {\n        if (state.subMode) return {state: state.subState, mode: state.subMode};\n        return {state: state, mode: mode};\n      }\n\n      //indent: function(state) {\n      //  return state.indented;\n      //}\n    };\n    return mode;\n  }, \"htmlmixed\", \"ruby\");\n\n  CodeMirror.defineMIME(\"text/x-slim\", \"slim\");\n  CodeMirror.defineMIME(\"application/x-slim\", \"slim\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        if (cx.tagName) context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n"],"sourceRoot":""}