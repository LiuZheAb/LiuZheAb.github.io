{"version":3,"sources":["components/Directory/index.js","components/CodeReview/Chapters/05.js"],"names":["index","props","bindHandleScroll","event","scrollTop","srcElement","documentElement","window","pageYOffset","body","setState","scrollToAnchor","anchorName","anchorElement","document","getElementById","scrollIntoView","block","behavior","state","articleTree","header","before","scrollY","directory","getElementsByClassName","offsetTop","addEventListener","this","onscroll","footer","H","offsetParent","s","offsetHeight","style","after","className","removeEventListener","length","array","i","targetObj","name","push","targetIndex","findIndex","n","map","key","id","title","paddingLeft","tag","onClick","nextProps","prevState","Component","getArticleTree","bind","childrens","children","nodeName","innerText"],"mappings":"oLAIqBA,G,wDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAiDVC,iBAAmB,SAACC,GAChB,IAAMC,IAAaD,EAAME,YAAaF,EAAME,WAAWC,gBAAgBF,WAChEG,OAAOC,cACNL,EAAME,WAAaF,EAAME,WAAWI,KAAKL,UAAY,GAC7D,EAAKM,SAAS,CAAEN,eAtDD,EA4DnBO,eAAiB,SAACC,GACd,GAAIA,EAAY,CACZ,IAAIC,EAAgBC,SAASC,eAAeH,GACxCC,GACAA,EAAcG,eAAe,CACzBC,MAAO,QACPC,SAAU,aAhEtB,EAAKC,MAAQ,CACTC,YAAa,EAAKnB,MAAMmB,YACxBhB,UAAW,MAJA,E,gEASf,IAAIiB,EAASP,SAASC,eAAe,UACjCO,EAASf,OAAOgB,QAChBC,EAAYV,SAASW,uBAAuB,kBAAkB,GAE9DC,EAAYF,EAAUE,UAC1BnB,OAAOoB,iBAAiB,SAAUC,KAAK1B,kBACvCK,OAAOsB,SAAW,WAEd,IADA,IAAIC,EAAShB,SAASW,uBAAuB,eAAe,GAAIM,EAAI,EAC7DD,GAEHC,GAAKD,EAAOJ,UACZI,EAASA,EAAOE,aAEpB,IAAIC,EAAInB,SAASL,KAAKL,WAAaU,SAASR,gBAAgBF,UAI5D,IAFA6B,GAASP,EAAYF,EAAUU,cAEvBH,EACJP,EAAUW,MAAV,6BAAwCT,EAAYO,EAAIF,EAAIV,EAAOa,aAAnE,0BACG,CAEH,IAAIE,EAAQ7B,OAAOgB,QACfC,IACIY,EAAQf,EAAOa,eACXZ,EAASc,IACTf,EAAOgB,UAAY,0CACnBb,EAAUa,UAAY,mCACtBf,EAASc,GAETd,EAASc,IACTf,EAAOgB,UAAY,0CACnBb,EAAUa,UAAY,iBACtBf,EAASc,IAGjBZ,EAAUW,MAAQ,Q,6CAa9B5B,OAAO+B,oBAAoB,SAAUV,KAAK1B,oB,+BAyBpC,IAAD,SAC4B0B,KAAKT,MAAhCC,EADD,EACCA,YAAahB,EADd,EACcA,UACfmC,EAASnB,EAAYmB,OACzB,GAAIzB,SAASC,eAAT,eAAyCwB,EAAS,EAAG,CAGrD,IAFA,IAAIC,EAAQ,GAEHC,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAC7B,IAAIC,EAAY5B,SAASC,eAAeK,EAAYqB,GAAGE,MACvDH,EAAMI,KAAKF,EAAUhB,WAIzB,IADA,IAAImB,EAAcL,EAAMM,WAAU,SAACC,GAAD,OAAOA,EAAI3C,KAAa,EACjDqC,EAAI,EAAGA,EAAIF,EAAQE,IACJ3B,SAASC,eAAT,mBAAoC0B,IAAKJ,UAA7DI,IAAMI,EAAmE,iCAAwF,YAGhJ,IAAjBA,IACA/B,SAASC,eAAT,mBAAoCwB,EAAS,IAAKF,UAAY,kCAGtE,OACI,wBAAIA,UAAU,kBACTjB,EAAY4B,KAAI,SAACC,EAAKjD,GACnB,OACI,wBAAIiD,IAAKjD,EAAOkD,GAAE,mBAAclD,GAASqC,UAAU,WAAWc,MAAOF,EAAIN,KAAMR,MAAO,CAAEiB,YAAyB,OAAZH,EAAII,IAAe,OAAS,QAAUC,QAAS,WAAQ,EAAK3C,eAAL,UAAuBsC,EAAIN,SAAYM,EAAIN,a,gDAlC3LY,EAAWC,GAAY,IAC3CpC,EAAgBmC,EAAhBnC,YACR,OAAIA,IAAgBoC,EAAUpC,YACnB,CACHA,eAGD,S,GAhFoBqC,e,yKCDdzD,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDkB,MAAQ,CACTC,YAAa,IAEjB,EAAKsC,eAAiB,EAAKA,eAAeC,KAApB,gBALP,E,6DAUf,IAFA,IAAIC,EAAY9C,SAASW,uBAAuB,mBAAmB,GAAGoC,SAClEzC,EAAc,GACTqB,EAAI,EAAGA,EAAImB,EAAUrB,OAAS,EAAGE,IAAK,CAC3C,IAAIqB,EAAWF,EAAUnB,GAAGqB,SACX,OAAbA,GAAkC,OAAbA,IACrBF,EAAUnB,GAAGS,GAAKU,EAAUnB,GAAGsB,UAC/B3C,EAAYwB,KAAK,CACbD,KAAMiB,EAAUnB,GAAGsB,UACnBV,IAAKO,EAAUnB,GAAGqB,YAI9BlC,KAAKlB,SAAS,CAAEU,kB,0CAGhBN,SAASqC,MAAQ,4FACjBvB,KAAK8B,mB,+BAGL,OACI,yBAAKrB,UAAU,gBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,iBACX,mGAEJ,yBAAKA,UAAU,mBACX,4CACA,wBAAIA,UAAU,YACV,8DACA,0EACA,8JACA,6OAEJ,4CACA,uBAAGA,UAAU,YAAb,uuBACA,uBAAGA,UAAU,YAAb,0LACA,uBAAGA,UAAU,YAAb,yaACA,8DACA,uBAAGA,UAAU,YAAb,0qBACA,kDACA,uBAAGA,UAAU,YAAW,6LAAxB,sKACA,uBAAGA,UAAU,YAAb,8sBACA,uBAAGA,UAAU,YAAb,seACA,wDACA,uBAAGA,UAAU,YAAb,2KAAoD,+EAApD,wOACA,uBAAGA,UAAU,YAAW,2LAAxB,sYAGR,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAWjB,YAAaQ,KAAKT,MAAMC,oB,GA1DpBqC","file":"static/js/41.778b9771.chunk.js","sourcesContent":["//文档右侧标题导航\r\nimport React, { Component, } from 'react';\r\nimport \"./index.less\";\r\n\r\nexport default class index extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            articleTree: this.props.articleTree,\r\n            scrollTop: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        //页面滚动到文档末尾时，将directory逐渐向上隐藏\r\n        let header = document.getElementById(\"header\");\r\n        let before = window.scrollY;\r\n        let directory = document.getElementsByClassName(\"directory-list\")[0];\r\n        //offsetTop为页面加载时directory距顶端的距离\r\n        let offsetTop = directory.offsetTop;\r\n        window.addEventListener('scroll', this.bindHandleScroll);\r\n        window.onscroll = function () {\r\n            let footer = document.getElementsByClassName(\"page-footer\")[0], H = 0;\r\n            while (footer) {\r\n                //H为footer距顶端的距离\r\n                H += footer.offsetTop;\r\n                footer = footer.offsetParent;\r\n            }\r\n            let s = document.body.scrollTop || document.documentElement.scrollTop;\r\n            //s为当前滚动距离加offsetTop加directory高度,即directory底端距顶部的距离\r\n            s = s + (offsetTop + directory.offsetHeight);\r\n            //当s超出H时,directory向上收起\r\n            if (s > H) {\r\n                directory.style = `position:fixed;top:${offsetTop - s + H - header.offsetHeight}px;transition:none`;\r\n            } else {\r\n                // 在s<=H时,若向下滚动时,滚动距离超过header高度将header收起;向上滚动则将header显示,并且directory随header平移\r\n                let after = window.scrollY;\r\n                if (directory) {\r\n                    if (after > header.offsetHeight) {\r\n                        if (before < after) {\r\n                            header.className = \"ant-layout-header header header-affixed\";\r\n                            directory.className = \"directory-list directory-affixed\"\r\n                            before = after;\r\n                        };\r\n                        if (before > after) {\r\n                            header.className = \"ant-layout-header header header-visible\";\r\n                            directory.className = \"directory-list\"\r\n                            before = after;\r\n                        };\r\n                    }\r\n                    directory.style = \"\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //获取滚动条滚动的高度\r\n    bindHandleScroll = (event) => {\r\n        const scrollTop = (event.srcElement ? event.srcElement.documentElement.scrollTop : false)\r\n            || window.pageYOffset\r\n            || (event.srcElement ? event.srcElement.body.scrollTop : 0);\r\n        this.setState({ scrollTop });\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.bindHandleScroll);\r\n    }\r\n    //点击directory跳转到锚点\r\n    scrollToAnchor = (anchorName) => {\r\n        if (anchorName) {\r\n            let anchorElement = document.getElementById(anchorName);\r\n            if (anchorElement) {\r\n                anchorElement.scrollIntoView({\r\n                    block: 'start',\r\n                    behavior: 'smooth'\r\n                });\r\n            }\r\n        }\r\n    }\r\n    //当props发生变化时改变articleTree\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        const { articleTree } = nextProps;\r\n        if (articleTree !== prevState.articleTree) {\r\n            return {\r\n                articleTree,\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        let { articleTree, scrollTop } = this.state;\r\n        let length = articleTree.length;\r\n        if (document.getElementById(`tree-num-0`) && length > 0) {\r\n            let array = [];\r\n            //array内为所有锚点的offsetTop,从小到大排列\r\n            for (let i = 0; i < length; i++) {\r\n                let targetObj = document.getElementById(articleTree[i].name);\r\n                array.push(targetObj.offsetTop);\r\n            }\r\n            //targetIndex为array中第一个大于当前滚动距离的值的index,通过offsetTop判断当前滚动到哪个锚点,并改变对应的标题导航样式。\r\n            let targetIndex = array.findIndex((n) => n > scrollTop) - 1;\r\n            for (let i = 0; i < length; i++) {\r\n                i === targetIndex ? document.getElementById(`tree-num-${i}`).className = \"tree-num directory-item-active\" : document.getElementById(`tree-num-${i}`).className = \"tree-num\";\r\n            }\r\n            //当滚动距离超过最后一个锚点时,array中找不到,返回-1\r\n            if (targetIndex === -2) {\r\n                document.getElementById(`tree-num-${length - 1}`).className = \"tree-num directory-item-active\";\r\n            }\r\n        }\r\n        return (\r\n            <ul className=\"directory-list\">\r\n                {articleTree.map((key, index) => {\r\n                    return (\r\n                        <li key={index} id={`tree-num-${index}`} className=\"tree-num\" title={key.name} style={{ paddingLeft: key.tag === \"H2\" ? \"10px\" : \"22px\" }} onClick={() => { this.scrollToAnchor(`${key.name}`) }}>{key.name}</li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Directory from \"../../Directory\";\r\n\r\nexport default class index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            articleTree: []\r\n        };\r\n        this.getArticleTree = this.getArticleTree.bind(this);\r\n    }\r\n    getArticleTree() {\r\n        let childrens = document.getElementsByClassName(\"article-content\")[0].children;\r\n        let articleTree = [];\r\n        for (let i = 0; i < childrens.length - 1; i++) {\r\n            let nodeName = childrens[i].nodeName;\r\n            if (nodeName === \"H2\" || nodeName === \"H3\") {\r\n                childrens[i].id = childrens[i].innerText;\r\n                articleTree.push({\r\n                    name: childrens[i].innerText,\r\n                    tag: childrens[i].nodeName\r\n                });\r\n            }\r\n        }\r\n        this.setState({ articleTree });\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Code Review——如何编写代码评审的评论\";\r\n        this.getArticleTree();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"page-content\">\r\n                <div className=\"article\">\r\n                    <div className=\"article-title\">\r\n                        <h1>如何编写代码评审的评论</h1>\r\n                    </div>\r\n                    <div className=\"article-content\">\r\n                        <h2>总结</h2>\r\n                        <ul className=\"indent-2\">\r\n                            <li>保持友好。</li>\r\n                            <li>解释你的理由。</li>\r\n                            <li>给出明确的方向或指出问题让开发人员来权衡。</li>\r\n                            <li>鼓励开发人员简化代码或添加代码注释，而不是仅仅向您解释代码的复杂性。</li>\r\n                        </ul>\r\n                        <h2>礼貌</h2>\r\n                        <p className=\"indent-2\">一般来说，礼貌和尊重是很重要的，同时也对您正在评审的代码的开发人员非常清晰和有帮助。一种方法是确保您总是对代码进行注释，而从不对开发人员进行注释。你不必总是遵循这个习惯，但是当你说一些可能会让人心烦意乱或有争议的话时，你绝对应该使用这个习惯。例如:</p>\r\n                        <p className=\"indent-2\">坏:“为什么您在这里使用线程，而显然没有从并发中获得任何好处?”</p>\r\n                        <p className=\"indent-2\">好:“这里的并发模型增加了系统的复杂性，但我看不到任何实际的性能优势。因为没有性能上的好处，所以这段代码最好是单线程的，而不是使用多个线程。”</p>\r\n                        <h2>解释为什么</h2>\r\n                        <p className=\"indent-2\">关于上面的“好”示例，您将注意到的一件事是，它帮助开发人员理解您为什么要发表评论。您并不总是需要在评审注释中包含这些信息，但是有时候，对于您的意图、您所遵循的最佳实践，或者您的建议如何改进代码健康状况，给出更多的解释是合适的。</p>\r\n                        <h2>给指导</h2>\r\n                        <p className=\"indent-2\"><b>一般来说，修复CL是开发人员的责任，而不是评审人员的责任</b>。您不需要为开发人员进行解决方案的详细设计或编写代码。</p>\r\n                        <p className=\"indent-2\">不过，这并不意味着评审人员应该毫无帮助。一般来说，你应该在指出问题和提供直接指导之间取得适当的平衡。指出问题并让开发人员做出决策通常有助于开发人员学习，并使代码评审变得更容易。它还可以产生更好的解决方案，因为开发人员比评审人员更接近代码。</p>\r\n                        <p className=\"indent-2\">然而，有时直接的指令、建议甚至代码更有帮助。代码评审的主要目标是获得尽可能好的CL。第二个目标是提高开发人员的技能，这样随着时间的推移，他们需要的评审就会越来越少。</p>\r\n                        <h2>接受解释</h2>\r\n                        <p className=\"indent-2\">如果您要求开发人员解释一段您不理解的代码，通常会导致他们<b>更清楚地重写代码</b>。偶尔，在代码中添加注释也是一种适当的响应，只要它不只是解释过于复杂的代码。</p>\r\n                        <p className=\"indent-2\"><b>仅在代码评审工具中编写的解释对将来的代码读者没有帮助</b>。它们只在少数情况下是可接受的，例如当您正在检查一个您不太熟悉的区域，并且开发人员解释了一些代码的普通读者可能已经知道的内容时。</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"directory\">\r\n                    <Directory articleTree={this.state.articleTree}></Directory>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}