{"version":3,"sources":["../node_modules/codemirror/mode/ruby/ruby.js","../node_modules/codemirror/mode/haml/haml.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js"],"names":["CodeMirror","defineMode","config","wordObj","words","o","i","e","length","curPunc","keywords","indentWords","dedentWords","opening","closing","chain","newtok","stream","state","tokenize","push","tokenBase","sol","match","eol","readBlockComment","eatSpace","m","phrase","mayIndent","ch","next","readQuoted","start","pos","depth","found","escaped","indexOf","backUp","regexpAhead","style","embed","eat","delim","propertyIsEnumerable","skipToEnd","pop","eatWhile","test","varList","lastTok","more","tokenBaseUntilBrace","peek","tokenBaseOnce","alreadyCalled","quote","unescaped","context","type","prev","startState","indented","indentUnit","continuedLine","token","indentation","kwtype","thisTok","word","current","column","indent","textAfter","Pass","firstChar","charAt","ct","closed","electricInput","lineComment","fold","defineMIME","mod","require","htmlMode","getMode","name","rubyMode","rubyInQuote","endQuote","rubyState","html","ruby","previousToken","startOfLine","htmlState","copyState","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","setStyle","defaults","prop","inText","parser","inBlock","doctype","inTag","baseState","tagName","tagStart","closure","isInAttribute","inAttribute","stringStartCol","terminator","Context","this","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","fullLine","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","close","xmlCurrentContext","cx","reverse","mimeModes","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","regexp","RegExp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","tag","dest","source","unshift","parserConfig","tags","configTags","configScript","scriptTypes","matches","mode","toLowerCase","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","search","maybeBackup","local","line","innerMode"],"mappings":"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","file":"static/js/17.7a017903.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  function wordObj(words) {\n    var o = {};\n    for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n    return o;\n  }\n  var keywords = wordObj([\n    \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n    \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n    \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n    \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n    \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n    \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n  ]);\n  var indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\",\n                             \"catch\", \"loop\", \"proc\", \"begin\"]);\n  var dedentWords = wordObj([\"end\", \"until\"]);\n  var opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\n  var closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[2], m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase, mayIndent) {\n    return function(stream, state) {\n      if (mayIndent) stream.eatSpace()\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closed ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\n  // full haml mode. This handled embedded ruby and html fragments too\n  CodeMirror.defineMode(\"haml\", function(config) {\n    var htmlMode = CodeMirror.getMode(config, {name: \"htmlmixed\"});\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n\n    function rubyInQuote(endQuote) {\n      return function(stream, state) {\n        var ch = stream.peek();\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = html;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n\n    function ruby(stream, state) {\n      if (stream.match(\"-#\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function html(stream, state) {\n      var ch = stream.peek();\n\n      // handle haml declarations. All declarations that cant be handled here\n      // will be passed to html mode\n      if (state.previousToken.style == \"comment\" ) {\n        if (state.indented > state.previousToken.indented) {\n          stream.skipToEnd();\n          return \"commentLine\";\n        }\n      }\n\n      if (state.startOfLine) {\n        if (ch == \"!\" && stream.match(\"!!\")) {\n          stream.skipToEnd();\n          return \"tag\";\n        } else if (stream.match(/^%[\\w:#\\.]+=/)) {\n          state.tokenize = ruby;\n          return \"hamlTag\";\n        } else if (stream.match(/^%[\\w:]+/)) {\n          return \"hamlTag\";\n        } else if (ch == \"/\" ) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n      }\n\n      if (state.startOfLine || state.previousToken.style == \"hamlTag\") {\n        if ( ch == \"#\" || ch == \".\") {\n          stream.match(/[\\w-#\\.]*/);\n          return \"hamlAttribute\";\n        }\n      }\n\n      // donot handle --> as valid ruby, make it HTML close comment instead\n      if (state.startOfLine && !stream.match(\"-->\", false) && (ch == \"=\" || ch == \"-\" )) {\n        state.tokenize = ruby;\n        return state.tokenize(stream, state);\n      }\n\n      if (state.previousToken.style == \"hamlTag\" ||\n          state.previousToken.style == \"closeAttributeTag\" ||\n          state.previousToken.style == \"hamlAttribute\") {\n        if (ch == \"(\") {\n          state.tokenize = rubyInQuote(\")\");\n          return state.tokenize(stream, state);\n        } else if (ch == \"{\") {\n          if (!stream.match(/^\\{%.*/)) {\n            state.tokenize = rubyInQuote(\"}\");\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n\n      return htmlMode.token(stream, state.htmlState);\n    }\n\n    return {\n      // default to html mode\n      startState: function() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          indented: 0,\n          previousToken: { style: null, indented: 0},\n          tokenize: html\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          htmlState : CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          indented: state.indented,\n          previousToken: state.previousToken,\n          tokenize: state.tokenize\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        // dont record comment line as we only want to measure comment line with\n        // the opening comment block\n        if (style && style != \"commentLine\") {\n          state.previousToken = { style: style, indented: state.indented };\n        }\n        // if current state is ruby and the previous token is not `,` reset the\n        // tokenize to html\n        if (stream.eol() && state.tokenize == ruby) {\n          stream.backUp(1);\n          var ch = stream.peek();\n          stream.next();\n          if (ch && ch != \",\") {\n            state.tokenize = html;\n          }\n        }\n        // reprocess some of the specific style tag when finish setting previousToken\n        if (style == \"hamlTag\") {\n          style = \"tag\";\n        } else if (style == \"commentLine\") {\n          style = \"comment\";\n        } else if (style == \"hamlAttribute\") {\n          style = \"attribute\";\n        } else if (style == \"closeAttributeTag\") {\n          style = null;\n        }\n        return style;\n      }\n    };\n  }, \"htmlmixed\", \"ruby\");\n\n  CodeMirror.defineMIME(\"text/x-haml\", \"haml\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        if (cx.tagName) context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n"],"sourceRoot":""}