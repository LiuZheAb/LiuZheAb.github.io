{"version":3,"sources":["components/Documents/Problem/index.js"],"names":["Proplem00","lazy","Proplem01","index","document","title","proplemData","window","addEventListener","getElementsByClassName","className","fallback","exact","path","catalog","href","render","baseHref","Object","keys","section","map","item","slice","key","length","item2","index2","to","onClick","props","history","push","Component","withRouter"],"mappings":"0LAOMA,EAAYC,gBAAK,kBAAM,wDACvBC,EAAYD,gBAAK,kBAAM,kCAEvBE,E,kLAEEC,SAASC,MAAQC,IAAYD,MAE7BE,OAAOC,iBAAiB,cAAc,WAClCJ,SAASK,uBAAuB,UAAU,GAAGC,UAAY,+C,+BAGvD,IAAD,OACL,OACI,kBAAC,IAAD,KACI,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OAChB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAMP,IAAYQ,QAAQ,GAAGC,KAAMC,OAAQ,WAAkF,OAA1EZ,SAASC,MAAQC,IAAYD,MAAQ,eAAOC,IAAYQ,QAAQ,GAAGT,MAAc,kBAACL,EAAD,SACjJ,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAMP,IAAYQ,QAAQ,GAAGC,KAAMC,OAAQ,WAAkF,OAA1EZ,SAASC,MAAQC,IAAYD,MAAQ,eAAOC,IAAYQ,QAAQ,GAAGT,MAAc,kBAACH,EAAD,SAEjJ,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAMP,IAAYW,SAAUD,OAAQ,WAE7C,OADAZ,SAASC,MAAQC,IAAYD,MACtB,yBAAKK,UAAU,WAClB,yBAAKA,UAAU,aACX,yBAAKA,UAAU,SACX,4BAAKJ,IAAYD,QAErB,yBAAKK,UAAU,YACVQ,OAAOC,KAAKb,IAAYc,SAASC,KAAI,SAACC,EAAMnB,GACzC,IAAIW,EAAUR,IAAYQ,QAAQS,MAAMjB,IAAYc,QAAQE,GAAM,GAAIhB,IAAYc,QAAQE,GAAM,GAAK,GACrG,OACI,wBAAIE,IAAKrB,GACJW,EAAQW,OAAS,EACd,oCACI,wBAAIf,UAAU,kBAAkBY,GAC/BR,EAAQO,KAAI,SAACK,EAAOC,GACjB,OACI,wBAAIH,IAAKG,EAAQjB,UAAU,kBAAiB,kBAAC,IAAD,CAAMkB,GAAIF,EAAMX,MAAOW,EAAMrB,YAKrF,wBAAIK,UAAU,sCAAsCmB,QAAS,WAAQ,EAAKC,MAAMC,QAAQC,KAAKlB,EAAQ,GAAGC,QAAUD,EAAQ,GAAGT,wB,GAtCjK4B,aAqDLC,sBAAW/B","file":"static/js/77.abbe3501.chunk.js","sourcesContent":["//Code Review文档\r\nimport React, { Component, Suspense, lazy } from 'react';\r\nimport { Link, HashRouter as Router, Route, Switch, withRouter } from \"react-router-dom\";\r\nimport Loder from '../../Loder';\r\nimport { proplemData } from \"../../../assets/data\";\r\n\r\n// 所有章节\r\nconst Proplem00 = lazy(() => import('./Chapters/00'));\r\nconst Proplem01 = lazy(() => import('./Chapters/01'));\r\n\r\nclass index extends Component {\r\n    componentDidMount() {\r\n        document.title = proplemData.title;\r\n        //路由变化时强制将header显示出来\r\n        window.addEventListener('hashchange', () => {\r\n            document.getElementsByClassName(\"header\")[0].className = \"ant-layout-header header header-visible\";\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Suspense fallback={<Loder />}>\r\n                    <Switch>\r\n                        <Route exact path={proplemData.catalog[0].href} render={() => { document.title = proplemData.title + \"——\" + proplemData.catalog[0].title; return <Proplem00 /> }} />\r\n                        <Route exact path={proplemData.catalog[1].href} render={() => { document.title = proplemData.title + \"——\" + proplemData.catalog[1].title; return <Proplem01 /> }} />\r\n                        {/* 文档首页目录 */}\r\n                        <Route exact path={proplemData.baseHref} render={() => {\r\n                            document.title = proplemData.title;\r\n                            return <div className=\"catalog\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"title\">\r\n                                        <h1>{proplemData.title}</h1>\r\n                                    </div>\r\n                                    <div className=\"contents\">\r\n                                        {Object.keys(proplemData.section).map((item, index) => {\r\n                                            let catalog = proplemData.catalog.slice(proplemData.section[item][0], proplemData.section[item][1] + 1);\r\n                                            return (\r\n                                                <ul key={index}>\r\n                                                    {catalog.length > 1 ?\r\n                                                        <>\r\n                                                            <li className=\"catalog-item-1\">{item}</li>\r\n                                                            {catalog.map((item2, index2) => {\r\n                                                                return (\r\n                                                                    <li key={index2} className=\"catalog-item-2\"><Link to={item2.href}>{item2.title}</Link></li>\r\n                                                                )\r\n                                                            })}\r\n                                                        </>\r\n                                                        :\r\n                                                        <li className=\"catalog-item-1 catalog-item-nochild\" onClick={() => { this.props.history.push(catalog[0].href) }}>{catalog[0].title}</li>}\r\n                                                </ul>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }} />\r\n                    </Switch>\r\n                </Suspense>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(index);"],"sourceRoot":""}