{"version":3,"sources":["../node_modules/codemirror/addon/mode/multiplex.js","../node_modules/codemirror/addon/mode/simple.js","../node_modules/codemirror/mode/handlebars/handlebars.js"],"names":["CodeMirror","multiplexingMode","outer","others","Array","prototype","slice","call","arguments","indexOf","string","pattern","from","returnEnd","found","length","m","exec","index","startState","innerActive","inner","copyState","state","mode","token","stream","curInner","oldContent","close","sol","this","pos","parseDelimiters","match","delimStyle","innerToken","innerStyle","cutOff","Infinity","i","other","open","outerIndent","indent","possibleOuterIndent","Pass","outerToken","textAfter","line","blankLine","electricChars","innerMode","mod","require","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","Rule","data","next","push","regex","apply","replace","result","asToken","tokenFunction","config","pending","pend","shift","text","local","end","tok","endToken","localState","endScan","current","start","curState","rule","matches","stack","pop","enterLocalMode","indentation","indentUnit","dedent","j","backUp","join","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","getMode","lState","forceEnd","indentFunction","meta","dontIndentStates","arr","rules","scan","dedentIfLineStart","defineSimpleMode","defineMode","simpleMode","states_","hasIndentation","list","orig","s","handlebars_raw","handlebars","dash_comment","comment","blockCommentStart","blockCommentEnd","parserConfig","base","defineMIME"],"mappings":"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","file":"static/js/31.f096de02.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.multiplexingMode = function(outer /*, others */) {\n  // Others should be {open, close, mode [, delimStyle] [, innerStyle]} objects\n  var others = Array.prototype.slice.call(arguments, 1);\n\n  function indexOf(string, pattern, from, returnEnd) {\n    if (typeof pattern == \"string\") {\n      var found = string.indexOf(pattern, from);\n      return returnEnd && found > -1 ? found + pattern.length : found;\n    }\n    var m = pattern.exec(from ? string.slice(from) : string);\n    return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n  }\n\n  return {\n    startState: function() {\n      return {\n        outer: CodeMirror.startState(outer),\n        innerActive: null,\n        inner: null\n      };\n    },\n\n    copyState: function(state) {\n      return {\n        outer: CodeMirror.copyState(outer, state.outer),\n        innerActive: state.innerActive,\n        inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner)\n      };\n    },\n\n    token: function(stream, state) {\n      if (!state.innerActive) {\n        var cutOff = Infinity, oldContent = stream.string;\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          var found = indexOf(oldContent, other.open, stream.pos);\n          if (found == stream.pos) {\n            if (!other.parseDelimiters) stream.match(other.open);\n            state.innerActive = other;\n\n            // Get the outer indent, making sure to handle CodeMirror.Pass\n            var outerIndent = 0;\n            if (outer.indent) {\n              var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n              if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n            }\n\n            state.inner = CodeMirror.startState(other.mode, outerIndent);\n            return other.delimStyle && (other.delimStyle + \" \" + other.delimStyle + \"-open\");\n          } else if (found != -1 && found < cutOff) {\n            cutOff = found;\n          }\n        }\n        if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n        var outerToken = outer.token(stream, state.outer);\n        if (cutOff != Infinity) stream.string = oldContent;\n        return outerToken;\n      } else {\n        var curInner = state.innerActive, oldContent = stream.string;\n        if (!curInner.close && stream.sol()) {\n          state.innerActive = state.inner = null;\n          return this.token(stream, state);\n        }\n        var found = curInner.close ? indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n        if (found == stream.pos && !curInner.parseDelimiters) {\n          stream.match(curInner.close);\n          state.innerActive = state.inner = null;\n          return curInner.delimStyle && (curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\");\n        }\n        if (found > -1) stream.string = oldContent.slice(0, found);\n        var innerToken = curInner.mode.token(stream, state.inner);\n        if (found > -1) stream.string = oldContent;\n\n        if (found == stream.pos && curInner.parseDelimiters)\n          state.innerActive = state.inner = null;\n\n        if (curInner.innerStyle) {\n          if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;\n          else innerToken = curInner.innerStyle;\n        }\n\n        return innerToken;\n      }\n    },\n\n    indent: function(state, textAfter, line) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (!mode.indent) return CodeMirror.Pass;\n      return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n    },\n\n    blankLine: function(state) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (mode.blankLine) {\n        mode.blankLine(state.innerActive ? state.inner : state.outer);\n      }\n      if (!state.innerActive) {\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          if (other.open === \"\\n\") {\n            state.innerActive = other;\n            state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n          }\n        }\n      } else if (state.innerActive.close === \"\\n\") {\n        state.innerActive = state.inner = null;\n      }\n    },\n\n    electricChars: outer.electricChars,\n\n    innerMode: function(state) {\n      return state.inner ? {state: state.inner, mode: state.innerActive.mode} : {state: state.outer, mode: outer};\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function(name, states) {\n    CodeMirror.defineMode(name, function(config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function(config, states) {\n    ensureState(states, \"start\");\n    var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [], orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function() {\n        return {state: \"start\", pending: null,\n                local: null, localState: null,\n                indent: hasIndentation ? [] : null};\n      },\n      copyState: function(state) {\n        var s = {state: state.state, pending: state.pending,\n                 local: state.local, localState: null,\n                 indent: state.indent && state.indent.slice(0)};\n        if (state.localState)\n          s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack)\n          s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next)\n          s.persistentStates = {mode: pers.mode,\n                                spec: pers.spec,\n                                state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                next: s.persistentStates};\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n      mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name))\n      throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++)\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function(stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState), m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n            stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode)\n            enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent)\n            state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent)\n            state.indent.pop();\n          var token = rule.token\n          if (token && token.apply) token = token(matches)\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            state.pending = [];\n            for (var j = 2; j < matches.length; j++)\n              if (matches[j])\n                state.pending.push({text: matches[j], token: rule.token[j - 1]});\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers)\n      state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n\n    state.localState = lState;\n    state.local = {mode: mode,\n                   end: spec.end && toRegex(spec.end),\n                   endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                   endToken: token && token.join ? token[token.length - 1] : token};\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function(state, textAfter, line) {\n      if (state.local && state.local.mode.indent)\n        return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n        return CodeMirror.Pass;\n\n      var pos = state.indent.length - 1, rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"), require(\"../../addon/mode/multiplex\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\", \"../../addon/mode/multiplex\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode(\"handlebars-tags\", {\n    start: [\n      { regex: /\\{\\{\\{/, push: \"handlebars_raw\", token: \"tag\" },\n      { regex: /\\{\\{!--/, push: \"dash_comment\", token: \"comment\" },\n      { regex: /\\{\\{!/,   push: \"comment\", token: \"comment\" },\n      { regex: /\\{\\{/,    push: \"handlebars\", token: \"tag\" }\n    ],\n    handlebars_raw: [\n      { regex: /\\}\\}\\}/, pop: true, token: \"tag\" },\n    ],\n    handlebars: [\n      { regex: /\\}\\}/, pop: true, token: \"tag\" },\n\n      // Double and single quotes\n      { regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/, token: \"string\" },\n      { regex: /'(?:[^\\\\']|\\\\.)*'?/, token: \"string\" },\n\n      // Handlebars keywords\n      { regex: />|[#\\/]([A-Za-z_]\\w*)/, token: \"keyword\" },\n      { regex: /(?:else|this)\\b/, token: \"keyword\" },\n\n      // Numeral\n      { regex: /\\d+/i, token: \"number\" },\n\n      // Atoms like = and .\n      { regex: /=|~|@|true|false/, token: \"atom\" },\n\n      // Paths\n      { regex: /(?:\\.\\.\\/)*(?:[A-Za-z_][\\w\\.]*)+/, token: \"variable-2\" }\n    ],\n    dash_comment: [\n      { regex: /--\\}\\}/, pop: true, token: \"comment\" },\n\n      // Commented code\n      { regex: /./, token: \"comment\"}\n    ],\n    comment: [\n      { regex: /\\}\\}/, pop: true, token: \"comment\" },\n      { regex: /./, token: \"comment\" }\n    ],\n    meta: {\n      blockCommentStart: \"{{--\",\n      blockCommentEnd: \"--}}\"\n    }\n  });\n\n  CodeMirror.defineMode(\"handlebars\", function(config, parserConfig) {\n    var handlebars = CodeMirror.getMode(config, \"handlebars-tags\");\n    if (!parserConfig || !parserConfig.base) return handlebars;\n    return CodeMirror.multiplexingMode(\n      CodeMirror.getMode(config, parserConfig.base),\n      {open: \"{{\", close: /\\}\\}\\}?/, mode: handlebars, parseDelimiters: true}\n    );\n  });\n\n  CodeMirror.defineMIME(\"text/x-handlebars-template\", \"handlebars\");\n});\n"],"sourceRoot":""}