{"version":3,"sources":["pages/DemoPages/Vis/disper_json lazy /^/.*/.json$/ groupOptions: {} namespace object","pages/DemoPages/Vis/utils.js","pages/DemoPages/Vis/index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","interp_onePoint","x","y","n","fval","s","Array","k","kk","m","lc","p","q","u","Math","floor","abs","spl","interp_multiPoint","getMax","arr","max","i","length","getMin","min","getMaxIndex","index","isNaN","getMinIndex","formatDecimal","num","decimal","toString","indexOf","substring","Number","parseFloat","toFixed","dataSource","push","title","key","state","loaded","treeData","fileName","fmin","fmax","Tout_min","dTout","Tout_max","dataType","disper_map_stack_A2B","undefined","disper_map_stack_B2A","disper_map_stack_SYM","pshift","fminIndex","fmaxIndex","disp","proc_F","proc_V","vout","white_data","white_data_copy","pink_data","black_data","black_xData","black_yData","resultV","resultF","prevPosition","getData","chart1_loading_mask","style","display","chart2_loading_mask","chart3_loading_mask","res","setState","getDisp","chartRender","chart1_heatmap","chart1_line","chart2_heatmap","chart2_line","chart3_heatmap","chart3_line","xAxis","name","nameLocation","nameGap","lineRender","status","fminArr","fmaxArr","len","f0","NaN","white_DataSource","col","row","range_v","v","item","f","xUnit","yUnit","heatmap_xData","heatmap_yData","isArray","updateHMLineData","updateLineData","chart4","heatmap","line","heatmap_expandOption","nf0","nv","heatmap_data","j","grid","right","left","top","bottom","headtmap_option","type","data","yAxis","visualMap","show","calculable","realtime","splitNumber","inRange","color","series","progressive","animation","setOption","line_option","tooltip","formatter","params","symbol","smooth","symbolSize","itemStyle","hoverAnimation","cursor","legendHoverLink","getZr","on","event","offsetX","offsetY","button","buttons","target","offsetWidth","offsetHeight","currentPosition","distenceArr","position","JSON","parse","stringify","shiftKey","ctrlKey","dataIndex","currentPositionX","pinkData","black_option","inverse","handleSelect","selectedKeys","info","handleClear","node","handleChangeInput","value","handleChangeData","handleCalculate","message","clearHeatmap","chart","clear","clearLine","handleSave","elementA","document","createElement","download","blob","Blob","href","URL","createObjectURL","body","appendChild","click","removeChild","this","echarts","getElementById","window","addEventListener","resize","dispose","width","height","padding","fontSize","alignItems","className","justifyContent","onSelect","blockNode","checkable","defaultValue","onChange","bind","textAlign","onClick","Group","tip","Component"],"mappings":"0GAAA,IAAIA,EAAM,CACT,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,wBAAyB,CACxB,KACA,MAGF,SAASC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","file":"static/js/84.bdd0242c.chunk.js","sourcesContent":["var map = {\n\t\"./pshift_group_1.json\": [\n\t\t1286,\n\t\t207\n\t],\n\t\"./pshift_group_10.json\": [\n\t\t1287,\n\t\t208\n\t],\n\t\"./pshift_group_11.json\": [\n\t\t1288,\n\t\t209\n\t],\n\t\"./pshift_group_12.json\": [\n\t\t1289,\n\t\t210\n\t],\n\t\"./pshift_group_13.json\": [\n\t\t1290,\n\t\t211\n\t],\n\t\"./pshift_group_14.json\": [\n\t\t1291,\n\t\t212\n\t],\n\t\"./pshift_group_15.json\": [\n\t\t1292,\n\t\t213\n\t],\n\t\"./pshift_group_16.json\": [\n\t\t1293,\n\t\t214\n\t],\n\t\"./pshift_group_17.json\": [\n\t\t1294,\n\t\t215\n\t],\n\t\"./pshift_group_18.json\": [\n\t\t1295,\n\t\t216\n\t],\n\t\"./pshift_group_19.json\": [\n\t\t1296,\n\t\t217\n\t],\n\t\"./pshift_group_2.json\": [\n\t\t1297,\n\t\t218\n\t],\n\t\"./pshift_group_20.json\": [\n\t\t1298,\n\t\t219\n\t],\n\t\"./pshift_group_21.json\": [\n\t\t1299,\n\t\t220\n\t],\n\t\"./pshift_group_22.json\": [\n\t\t1300,\n\t\t221\n\t],\n\t\"./pshift_group_23.json\": [\n\t\t1301,\n\t\t222\n\t],\n\t\"./pshift_group_24.json\": [\n\t\t1302,\n\t\t223\n\t],\n\t\"./pshift_group_25.json\": [\n\t\t1303,\n\t\t224\n\t],\n\t\"./pshift_group_26.json\": [\n\t\t1304,\n\t\t225\n\t],\n\t\"./pshift_group_27.json\": [\n\t\t1305,\n\t\t226\n\t],\n\t\"./pshift_group_28.json\": [\n\t\t1306,\n\t\t227\n\t],\n\t\"./pshift_group_29.json\": [\n\t\t1307,\n\t\t228\n\t],\n\t\"./pshift_group_3.json\": [\n\t\t1308,\n\t\t229\n\t],\n\t\"./pshift_group_30.json\": [\n\t\t1309,\n\t\t230\n\t],\n\t\"./pshift_group_31.json\": [\n\t\t1310,\n\t\t231\n\t],\n\t\"./pshift_group_32.json\": [\n\t\t1311,\n\t\t232\n\t],\n\t\"./pshift_group_33.json\": [\n\t\t1312,\n\t\t233\n\t],\n\t\"./pshift_group_34.json\": [\n\t\t1313,\n\t\t234\n\t],\n\t\"./pshift_group_35.json\": [\n\t\t1314,\n\t\t235\n\t],\n\t\"./pshift_group_36.json\": [\n\t\t1315,\n\t\t236\n\t],\n\t\"./pshift_group_37.json\": [\n\t\t1316,\n\t\t237\n\t],\n\t\"./pshift_group_38.json\": [\n\t\t1317,\n\t\t238\n\t],\n\t\"./pshift_group_39.json\": [\n\t\t1318,\n\t\t239\n\t],\n\t\"./pshift_group_4.json\": [\n\t\t1319,\n\t\t240\n\t],\n\t\"./pshift_group_40.json\": [\n\t\t1320,\n\t\t241\n\t],\n\t\"./pshift_group_41.json\": [\n\t\t1321,\n\t\t242\n\t],\n\t\"./pshift_group_42.json\": [\n\t\t1322,\n\t\t243\n\t],\n\t\"./pshift_group_43.json\": [\n\t\t1323,\n\t\t244\n\t],\n\t\"./pshift_group_44.json\": [\n\t\t1324,\n\t\t245\n\t],\n\t\"./pshift_group_45.json\": [\n\t\t1325,\n\t\t246\n\t],\n\t\"./pshift_group_46.json\": [\n\t\t1326,\n\t\t247\n\t],\n\t\"./pshift_group_47.json\": [\n\t\t1327,\n\t\t248\n\t],\n\t\"./pshift_group_48.json\": [\n\t\t1328,\n\t\t249\n\t],\n\t\"./pshift_group_49.json\": [\n\t\t1329,\n\t\t250\n\t],\n\t\"./pshift_group_5.json\": [\n\t\t1330,\n\t\t251\n\t],\n\t\"./pshift_group_50.json\": [\n\t\t1331,\n\t\t252\n\t],\n\t\"./pshift_group_51.json\": [\n\t\t1332,\n\t\t253\n\t],\n\t\"./pshift_group_6.json\": [\n\t\t1333,\n\t\t254\n\t],\n\t\"./pshift_group_7.json\": [\n\t\t1334,\n\t\t255\n\t],\n\t\"./pshift_group_8.json\": [\n\t\t1335,\n\t\t256\n\t],\n\t\"./pshift_group_9.json\": [\n\t\t1336,\n\t\t257\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 1261;\nmodule.exports = webpackAsyncContext;","function interp_multiPoint(x, y, n, t, fval, m) {\r\n    if (t == null) {\r\n        return;\r\n    }\r\n    let tempVal = 0.0;;\r\n    for (let k = 0; k < m; k++) {\r\n        fval[k] = interp_onePoint(x, y, n, t[k], tempVal);\r\n    }\r\n    return fval;\r\n}\r\n\r\nfunction interp_onePoint(x, y, n, t, fval) {\r\n    let s = new Array(5);\r\n    spl(x, y, n, -1, t, s);\r\n    fval = s[4];\r\n    return fval;\r\n}\r\n\r\n\r\nfunction spl(x, y, n, k, t, s) {\r\n    let kk, m, lc;\r\n    let u = [], p, q;\r\n    s[4] = 0.0;\r\n    s[0] = 0.0;\r\n    s[1] = 0.0;\r\n    s[2] = 0.0;\r\n    s[3] = 0.0;\r\n    if (n < 1) {\r\n        return;\r\n    }\r\n    if (n === 1) {\r\n        s[0] = y[0];\r\n        s[4] = y[0];\r\n        return;\r\n    }\r\n    if (n === 2) {\r\n        s[0] = y[0];\r\n        s[1] = (y[1] - y[0]) / (x[1] - x[0]);\r\n        if (k < 0) {\r\n            s[4] = (y[0] * (t - x[1]) - y[1] * (t - x[0])) / (x[0] - x[1]);\r\n        }\r\n        return;\r\n    }\r\n    if (k < 0 && n > 0 && t < x[0]) {\r\n        s[4] = y[0];\r\n        return;\r\n    }\r\n    if (k < 0 && n > 0 && t > x[n - 1]) {\r\n        s[4] = y[n - 1];\r\n        return;\r\n    }\r\n    if (k < 0) {\r\n        if (t <= x[1]) {\r\n            kk = 0;\r\n\r\n        } else if (t >= x[n - 1]) {\r\n            kk = n - 2;\r\n        } else {\r\n            kk = 1;\r\n            m = n;\r\n            while (((kk - m) !== 1) && ((kk - m) !== -1)) {\r\n                lc = Math.floor((kk + m) / 2);\r\n                if (t < x[lc - 1]) {\r\n                    m = lc;\r\n                } else {\r\n                    kk = lc;\r\n                }\r\n            }\r\n            kk = kk - 1;\r\n        }\r\n    } else {\r\n        kk = k;\r\n    }\r\n    if (kk > n - 1) {\r\n        kk = n - 2;\r\n    }\r\n    u[2] = (y[kk + 1] - y[kk]) / (x[kk + 1] - x[kk]);\r\n    if (n === 3) {\r\n        if (kk === 0) {\r\n            u[3] = (y[2] - y[1]) / (x[2] - x[1]);\r\n            u[4] = 2.0 * u[3] - u[2];\r\n            u[1] = 2.0 * u[2] - u[3];\r\n            u[0] = 2.0 * u[1] - u[2];\r\n        } else {\r\n            u[1] = (y[1] - y[0]) / (x[1] - x[0]);\r\n            u[0] = 2.0 * u[1] - u[2];\r\n            u[3] = 2.0 * u[2] - u[1];\r\n            u[4] = 2.0 * u[3] - u[2];\r\n        }\r\n    }\r\n    else {\r\n        if (kk <= 1) {\r\n            u[3] = (y[kk + 2] - y[kk + 1]) / (x[kk + 2] - x[kk + 1]);\r\n            if (kk === 1) {\r\n                u[1] = (y[1] - y[0]) / (x[1] - x[0]);\r\n                u[0] = 2.0 * u[1] - u[2];\r\n                if (n === 4) {\r\n                    u[4] = 2.0 * u[3] - u[2];\r\n\r\n                } else {\r\n                    u[4] = (y[4] - y[3]) / (x[4] - x[3]);\r\n                }\r\n            } else {\r\n                u[1] = 2.0 * u[2] - u[3];\r\n                u[0] = 2.0 * u[1] - u[2];\r\n                u[4] = (y[3] - y[2]) / (x[3] - x[2]);\r\n            }\r\n        }\r\n        else if (kk >= (n - 3)) {\r\n            u[1] = (y[kk] - y[kk - 1]) / (x[kk] - x[kk - 1]);\r\n            if (kk === (n - 3)) {\r\n                u[3] = (y[n - 1] - y[n - 2]) / (x[n - 1] - x[n - 2]);\r\n                u[4] = 2.0 * u[3] - u[2];\r\n                if (n === 4) {\r\n                    u[0] = 2.0 * u[1] - u[2];\r\n\r\n                } else {\r\n                    u[0] = (y[kk - 1] - y[kk - 2]) / (x[kk - 1] - x[kk - 2]);\r\n                }\r\n            } else {\r\n                u[3] = 2.0 * u[2] - u[1];\r\n                u[4] = 2.0 * u[3] - u[2];\r\n                u[0] = (y[kk - 1] - y[kk - 2]) / (x[kk - 1] - x[kk - 2]);\r\n            }\r\n        } else {\r\n            u[1] = (y[kk] - y[kk - 1]) / (x[kk] - x[kk - 1]);\r\n            u[0] = (y[kk - 1] - y[kk - 2]) / (x[kk - 1] - x[kk - 2]);\r\n            u[3] = (y[kk + 2] - y[kk + 1]) / (x[kk + 2] - x[kk + 1]);\r\n            u[4] = (y[kk + 3] - y[kk + 2]) / (x[kk + 3] - x[kk + 2]);\r\n        }\r\n    }\r\n    s[0] = Math.abs(u[3] - u[2]);\r\n    s[1] = Math.abs(u[0] - u[1]);\r\n    if ((s[0] + 1.0 === 1.0) && (s[1] + 1.0 === 1.0)) {\r\n        p = (u[1] + u[2]) / 2.0;\r\n    } else {\r\n        p = (s[0] * u[1] + s[1] * u[2]) / (s[0] + s[1]);\r\n    }\r\n    s[0] = Math.abs(u[3] - u[4]);\r\n    s[1] = Math.abs(u[2] - u[1]);\r\n    if ((s[0] + 1.0 === 1.0) && (s[1] + 1.0 === 1.0)) {\r\n        q = (u[2] + u[3]) / 2.0;\r\n    } else {\r\n        q = (s[0] * u[2] + s[1] * u[3]) / (s[0] + s[1]);\r\n    }\r\n    s[0] = y[kk];\r\n    s[1] = p;\r\n    s[3] = x[kk + 1] - x[kk];\r\n    s[2] = (3.0 * u[2] - 2.0 * p - q) / s[3];\r\n    s[3] = (p + q - 2.0 * u[2]) / (s[3] * s[3]);\r\n    if (k < 0) {\r\n        p = t - x[kk];\r\n        s[4] = s[0] + s[1] * p + s[2] * p * p + s[3] * p * p * p;\r\n    }\r\n    return s[4];\r\n}\r\n\r\n//获取最大值\r\nlet getMax = arr => {\r\n    //假设最大值max 为arr[0]\r\n    var max = arr[0];\r\n    //遍历对比\r\n    for (var i = 0; i < arr.length; i++) {\r\n        //若max小于当前项 说明不是最大值 将当前项的值赋予max \r\n        // 继续遍历对比找到最大的值\r\n        if (max < arr[i]) {\r\n            max = arr[i];\r\n        }\r\n    }\r\n    return max;\r\n}\r\n//获取最小值\r\nlet getMin = arr => {\r\n    var min = arr[0];\r\n    for (var i = 0; i < arr.length; i++) {\r\n        if (min > arr[i]) {\r\n            min = arr[i];\r\n        }\r\n    }\r\n    return min;\r\n}\r\n//获取最大值的下标\r\nlet getMaxIndex = arr => {\r\n    let max = arr[0];\r\n    //声明了个变量 保存下标值\r\n    let index = 0;\r\n    for (let i = 0; i < arr.length; i++) {\r\n        if (isNaN(max)) {\r\n            max = arr[i];\r\n            index = i;\r\n        } else if (max < arr[i]) {\r\n            max = arr[i];\r\n            index = i;\r\n        }\r\n    }\r\n    return index;\r\n}\r\n//获取最小值的下标\r\nlet getMinIndex = arr => {\r\n    var min = arr[0];\r\n    //声明了个变量 保存下标值\r\n    var index = 0;\r\n    for (var i = 0; i < arr.length; i++) {\r\n        if (isNaN(min)) {\r\n            min = arr[i];\r\n            index = i;\r\n        } else if (min > arr[i]) {\r\n            min = arr[i];\r\n            index = i;\r\n        }\r\n    }\r\n    return index;\r\n}\r\n//格式化小数\r\nlet formatDecimal = (num, decimal) => {\r\n    num = num.toString()\r\n    let index = num.indexOf('.')\r\n    if (index !== -1) {\r\n        num = num.substring(0, decimal + index + 1)\r\n    } else {\r\n        num = num.substring(0)\r\n    }\r\n    return Number(parseFloat(num).toFixed(decimal))\r\n}\r\n\r\nexport { interp_multiPoint, interp_onePoint, getMax, getMin, getMaxIndex, getMinIndex, formatDecimal };","import React, { Component } from 'react';\r\nimport { Tree, Input, Radio, Button, message, Spin } from \"antd\";\r\nimport * as echarts from 'echarts';\r\nimport * as utils from \"./utils\"\r\nimport \"./index.css\";\r\n\r\nconst { interp_multiPoint, getMax, getMin, getMaxIndex, getMinIndex, formatDecimal } = utils;\r\nlet dataSource = [];\r\nfor (let i = 1; i < 52; i++) {\r\n    dataSource.push({\r\n        title: 'pshift_group_' + i,\r\n        key: i,\r\n    })\r\n}\r\n\r\nexport default class index extends Component {\r\n    state = {\r\n        loaded: false,\r\n        treeData: dataSource,\r\n        fileName: \"\",\r\n        fmin: 0.1,\r\n        fmax: 5,\r\n        Tout_min: 0.2,\r\n        dTout: 0.05,\r\n        Tout_max: 2.0,\r\n        dataType: \"A2B\",\r\n        disper_map_stack_A2B: undefined,\r\n        disper_map_stack_B2A: undefined,\r\n        disper_map_stack_SYM: undefined,\r\n        pshift: undefined,\r\n        fminIndex: undefined,\r\n        fmaxIndex: undefined,\r\n        disp: undefined,\r\n        proc_F: undefined,\r\n        proc_V: undefined,\r\n        vout: undefined,\r\n        fval: undefined,\r\n        white_data: [],\r\n        white_data_copy: undefined,\r\n        pink_data: [],\r\n        black_data: [],\r\n        black_xData: [],\r\n        black_yData: [],\r\n        resultV: [],\r\n        resultF: [],\r\n        prevPosition: undefined\r\n    }\r\n    componentDidMount() {\r\n        this.chart1_heatmap = echarts.init(document.getElementById('chart1_heatmap'));\r\n        this.chart1_line = echarts.init(document.getElementById('chart1_line'));\r\n        this.chart1_loading_mask = document.getElementById('chart1_loading_mask');\r\n        this.chart2_heatmap = echarts.init(document.getElementById('chart2_heatmap'));\r\n        this.chart2_line = echarts.init(document.getElementById('chart2_line'));\r\n        this.chart2_loading_mask = document.getElementById('chart2_loading_mask');\r\n        this.chart3_heatmap = echarts.init(document.getElementById('chart3_heatmap'));\r\n        this.chart3_line = echarts.init(document.getElementById('chart3_line'));\r\n        this.chart3_loading_mask = document.getElementById('chart3_loading_mask');\r\n        this.chart4 = echarts.init(document.getElementById('chart4'));\r\n        this.handleClear();\r\n        window.addEventListener(\"resize\", () => {\r\n            this.chart1_heatmap.resize();\r\n            this.chart1_line.resize();\r\n            this.chart2_heatmap.resize();\r\n            this.chart2_line.resize();\r\n            this.chart3_heatmap.resize();\r\n            this.chart3_line.resize();\r\n            this.chart4.resize();\r\n        });\r\n    }\r\n    getData = fileName => {\r\n        this.chart1_loading_mask.style.display = \"flex\";\r\n        this.chart2_loading_mask.style.display = \"flex\";\r\n        this.chart3_loading_mask.style.display = \"flex\";\r\n        import(`./disper_json/${fileName}.json`).then(res => {\r\n            this.chart1_loading_mask.style.display = \"none\";\r\n            this.chart2_loading_mask.style.display = \"none\";\r\n            this.chart3_loading_mask.style.display = \"none\";\r\n            let { disper_map_stack_A2B, disper_map_stack_B2A, disper_map_stack_SYM, pshift } = res;\r\n            this.setState({\r\n                loaded: true,\r\n                disper_map_stack_A2B,\r\n                disper_map_stack_B2A,\r\n                disper_map_stack_SYM,\r\n                pshift,\r\n            });\r\n            this.getDisp(0);\r\n            this.chartRender(this.chart1_heatmap, this.chart1_line, disper_map_stack_A2B);\r\n            this.chartRender(this.chart2_heatmap, this.chart2_line, disper_map_stack_B2A);\r\n            this.chartRender(this.chart3_heatmap, this.chart3_line, disper_map_stack_SYM,\r\n                {\r\n                    xAxis: {\r\n                        name: \"Frequency (Hz)\",\r\n                        nameLocation: \"middle\",\r\n                        nameGap: 25\r\n                    },\r\n                });\r\n            this.lineRender();\r\n        });\r\n    }\r\n    getDisp = status => {\r\n        let { dataType, disper_map_stack_A2B, disper_map_stack_B2A, disper_map_stack_SYM, pshift, fmin, fmax, Tout_min, dTout, Tout_max } = this.state;\r\n        let fminArr = [], fmaxArr = [];\r\n        for (let i = 0, len = pshift.f0.length; i < len; i++) {\r\n            fminArr.push(Math.abs(fmin - pshift.f0[i]));\r\n            fmaxArr.push(Math.abs(fmax - pshift.f0[i]));\r\n        }\r\n        let vout = [], resultV = [];\r\n        for (let i = Tout_min; i <= Tout_max; i = Number((i + dTout).toFixed(2))) {\r\n            vout.push(1 / i);\r\n            resultV.push(i)\r\n        }\r\n        let proc_F = [], proc_V = []\r\n        for (let i = 0, len = pshift.f0.length; i < len; i++) {\r\n            proc_F.push(pshift.f0[i]);\r\n            if (i < getMinIndex(fminArr)) {\r\n                proc_F[i] = NaN;\r\n            } else if (i > getMinIndex(fmaxArr)) {\r\n                proc_F[i] = NaN;\r\n            }\r\n        }\r\n\r\n        let white_DataSource = [];\r\n        switch (dataType) {\r\n            case \"A2B\":\r\n                white_DataSource = disper_map_stack_A2B[0].map((col, i) => disper_map_stack_A2B.map(row => row[i]));\r\n                break;\r\n            case \"B2A\":\r\n                white_DataSource = disper_map_stack_B2A[0].map((col, i) => disper_map_stack_B2A.map(row => row[i]));\r\n                break;\r\n            case \"SYM\":\r\n                white_DataSource = disper_map_stack_SYM[0].map((col, i) => disper_map_stack_SYM.map(row => row[i]));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        proc_V = white_DataSource.map(arr => getMaxIndex(arr) / arr.length);\r\n        let range_v = getMax(pshift.v) - getMin(pshift.v);\r\n        proc_V = proc_V.map(item => item * range_v + getMin(pshift.v))\r\n        let fval = new Array(vout.length);\r\n        let disp = {\r\n            f: vout,\r\n            v: interp_multiPoint(proc_F, proc_V, proc_F.length, vout, fval, vout.length)\r\n        }\r\n\r\n        this.setState({\r\n            disp,\r\n            fminIndex: getMinIndex(fminArr),\r\n            fmaxIndex: getMinIndex(fmaxArr),\r\n            proc_F,\r\n            proc_V,\r\n            vout,\r\n            fval,\r\n            resultV\r\n        }, () => {\r\n            if (status) {\r\n                let { xUnit, yUnit, heatmap_xData, heatmap_yData } = this.state;\r\n                let pink_data = [], resultF = [];\r\n                for (let i = 0, len = disp.f.length; i < len; i++) {\r\n                    if (disp.f[i] && disp.v[i]) {\r\n                        pink_data.push([disp.f[i], disp.v[i]]);\r\n                        resultF.push(disp.v[i])\r\n                    }\r\n                }\r\n                let black_data = [], black_xData = [], black_yData = [];\r\n                for (let i = 0, len = pink_data.length; i < len; i++) {\r\n                    if (Array.isArray(pink_data[i])) {\r\n                        black_data.push([disp.v[i], disp.v[i] / disp.f[i] / 2]);\r\n                        black_xData.push(disp.v[i]);\r\n                        black_yData.push(disp.v[i] / disp.f[i] / 2);\r\n                    }\r\n                }\r\n                let white_data = white_DataSource.map((arr, i) => [i * xUnit + getMin(heatmap_xData), getMaxIndex(arr) * yUnit + getMin(heatmap_yData)]);\r\n                this.setState({ pink_data, white_data, resultF, black_data, black_xData, black_yData });\r\n                this.updateHMLineData(this.chart1_line, white_data, pink_data);\r\n                this.updateHMLineData(this.chart2_line, white_data, pink_data);\r\n                this.updateHMLineData(this.chart3_line, white_data, pink_data);\r\n                this.updateLineData(this.chart4, black_xData, black_yData, black_data);\r\n            }\r\n        });\r\n    }\r\n    chartRender = (heatmap, line, dataSource, heatmap_expandOption) => {\r\n        let { dataType, disper_map_stack_A2B, disper_map_stack_B2A, disper_map_stack_SYM, pshift, fminIndex, fmaxIndex, disp } = this.state;\r\n        let { f0, nf0, v, nv } = pshift;\r\n        /**绘制热力图背景 */\r\n        let heatmap_data = [], heatmap_xData = [], heatmap_yData = [];\r\n        for (let i = 0; i < nf0; i++) {\r\n            for (let j = 0; j < nv; j++) {\r\n                heatmap_data.push([i, j, dataSource[j][i]]);\r\n            }\r\n            heatmap_xData.push(formatDecimal(f0[i], 2));\r\n        }\r\n        for (let j = 0; j < nv; j++) {\r\n            heatmap_yData.push(formatDecimal(v[j], 2));\r\n        }\r\n        let grid = {\r\n            right: 20,\r\n            left: 60,\r\n            top: 20,\r\n            bottom: 40\r\n        }\r\n        let headtmap_option = {\r\n            grid,\r\n            xAxis: {\r\n                type: 'category',\r\n                data: heatmap_xData\r\n            },\r\n            yAxis: {\r\n                type: 'category',\r\n                data: heatmap_yData,\r\n                name: \"Phase velocity (km/s)\",\r\n                nameLocation: \"middle\",\r\n                nameGap: 36\r\n            },\r\n            visualMap: {\r\n                type: 'continuous',\r\n                show: false,\r\n                left: 'right',\r\n                top: 'center',\r\n                calculable: true,\r\n                realtime: false,\r\n                splitNumber: 10,\r\n                inRange: {\r\n                    color: ['#00008d', '#102ff0', '#059afa', '#5dff9a', '#fded02', '#ff9109', '#df0300', '#7c0100', '#830100', '#810000']\r\n                },\r\n                min: 0.95,\r\n                max: 1\r\n            },\r\n            series: [{\r\n                type: 'heatmap',\r\n                data: heatmap_data,\r\n                progressive: 5000,\r\n                animation: false\r\n            }],\r\n        };\r\n        heatmap.setOption(headtmap_option, true);\r\n        if (heatmap_expandOption) {\r\n            heatmap.setOption(heatmap_expandOption);\r\n        }\r\n\r\n        /**绘制线 */\r\n        let white_DataSource = [];\r\n        //转换数组行列，方便找列的最大值\r\n        switch (dataType) {\r\n            case \"A2B\":\r\n                white_DataSource = disper_map_stack_A2B[0].map((col, i) => disper_map_stack_A2B.map(row => row[i]));\r\n                break;\r\n            case \"B2A\":\r\n                white_DataSource = disper_map_stack_B2A[0].map((col, i) => disper_map_stack_B2A.map(row => row[i]));\r\n                break;\r\n            case \"SYM\":\r\n                white_DataSource = disper_map_stack_SYM[0].map((col, i) => disper_map_stack_SYM.map(row => row[i]));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        let xUnit = (getMax(heatmap_xData) - getMin(heatmap_xData)) / (nf0 - 1);\r\n        let yUnit = (getMax(heatmap_yData) - getMin(heatmap_yData)) / (nv - 1);\r\n        let white_data = white_DataSource.map((arr, i) => [i * xUnit + getMin(heatmap_xData), getMaxIndex(arr) * yUnit + getMin(heatmap_yData)]);\r\n        for (let i = 0, len = white_data.length; i < len; i++) {\r\n            if (i < fminIndex) {\r\n                white_data[i] = NaN;\r\n            } else if (i > fmaxIndex) {\r\n                white_data[i] = NaN;\r\n            }\r\n        }\r\n        let pink_data = [], resultF = [];\r\n        for (let i = 0, len = disp.f.length; i < len; i++) {\r\n            if (disp.f[i] && disp.v[i]) {\r\n                pink_data.push([disp.f[i], disp.v[i]]);\r\n                resultF.push(disp.v[i]);\r\n            }\r\n        }\r\n        this.setState({ white_data, pink_data, xUnit, yUnit, heatmap_xData, heatmap_yData, resultF });\r\n        let line_option = {\r\n            tooltip: {\r\n                formatter: function (params) {\r\n                    return 'f: ' + params.data[0].toFixed(4) + '<br>v: ' + params.data[1].toFixed(4);\r\n                }\r\n            },\r\n            grid,\r\n            xAxis: {\r\n                type: 'value',\r\n                show: false,\r\n                max: getMax(heatmap_xData),\r\n                min: getMin(heatmap_xData)\r\n            },\r\n            yAxis: {\r\n                type: 'value',\r\n                show: false,\r\n                max: getMax(heatmap_yData),\r\n                min: getMin(heatmap_yData)\r\n            },\r\n            series: [\r\n                {\r\n                    id: \"a\",\r\n                    type: 'line',\r\n                    symbol: 'circle',\r\n                    smooth: true,\r\n                    symbolSize: 5,\r\n                    data: white_data,\r\n                    itemStyle: {\r\n                        color: \"#fff\"\r\n                    },\r\n                    hoverAnimation: false,\r\n                    cursor: \"default\",\r\n                    legendHoverLink: false\r\n                },\r\n                {\r\n                    id: \"b\",\r\n                    type: 'line',\r\n                    symbol: 'circle',\r\n                    smooth: true,\r\n                    symbolSize: 8,\r\n                    data: pink_data,\r\n                    itemStyle: {\r\n                        color: \"#ff00ff\"\r\n                    },\r\n                    hoverAnimation: false,\r\n                }\r\n            ]\r\n        };\r\n        line.setOption(line_option, true);\r\n        line.getZr().on(\r\n            'mousemove', params => {\r\n                let { event, offsetX, offsetY } = params;\r\n                if (event.button === 0 && event.buttons === 1) {\r\n                    let { offsetWidth, offsetHeight } = params.event.target;\r\n                    let currentPosition = {\r\n                        x: (offsetX - grid.left) / (offsetWidth - grid.left - grid.right) * (getMax(heatmap_xData) - getMin(heatmap_xData)) + getMin(heatmap_xData),\r\n                        y: (offsetHeight - grid.bottom - offsetY) / (offsetHeight - grid.top - grid.bottom) * (getMax(heatmap_yData) - getMin(heatmap_yData)) + getMin(heatmap_yData),\r\n                    }\r\n                    let { white_data, white_data_copy, prevPosition } = this.state;\r\n                    let distenceArr = white_data.map((position, i) => Math.abs(currentPosition.x - position[0]));\r\n                    if (!white_data_copy) {\r\n                        white_data_copy = JSON.parse(JSON.stringify(white_data));\r\n                    }\r\n                    let position = [];\r\n                    if (event.shiftKey || event.ctrlKey) {\r\n                        let dataIndex = getMinIndex(distenceArr);\r\n                        if (event.shiftKey) {\r\n                            for (let i = 0, len = white_data.length; i < len; i++) {\r\n                                if (i > dataIndex) {\r\n                                    white_data[i] = NaN;\r\n                                }\r\n                                if (i > dataIndex + 3) {\r\n                                    white_data_copy[i] = NaN;\r\n                                }\r\n                            }\r\n                        } else if (event.ctrlKey) {\r\n                            for (let i = 0, len = white_data.length; i < len; i++) {\r\n                                if (i < dataIndex) {\r\n                                    white_data[i] = NaN;\r\n                                }\r\n                                if (i < dataIndex - 2) {\r\n                                    white_data_copy[i] = NaN;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (Array.isArray(white_data[getMinIndex(distenceArr)])) {\r\n                            white_data[getMinIndex(distenceArr)][1] = currentPosition.y;\r\n                            white_data_copy[getMinIndex(distenceArr)][1] = currentPosition.y;\r\n                            position = [getMinIndex(distenceArr), currentPosition.y];\r\n                            if (prevPosition) {\r\n                                for (let i = 1; i < Math.abs(prevPosition[0] - getMinIndex(distenceArr)); i++) {\r\n                                    let index = prevPosition[0] > getMinIndex(distenceArr) ? prevPosition[0] - i : prevPosition[0] + i;\r\n                                    let y = prevPosition[1] + (currentPosition.y - prevPosition[1]) / Math.abs(getMinIndex(distenceArr) - prevPosition[0]) * i;\r\n                                    white_data[index][1] = y;\r\n                                    white_data_copy[index][1] = y;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    let { proc_F, vout, disp, } = this.state;\r\n                    let proc_V = white_data_copy.map(arr => Array.isArray(arr) ? arr[1] : NaN);\r\n                    disp.v = interp_multiPoint(proc_F, proc_V, proc_F.length, vout, new Array(vout.length), vout.length)\r\n                    let pink_data = [], resultF = [];\r\n                    for (let i = 0, len = disp.f.length; i < len; i++) {\r\n                        if (disp.f[i] && disp.v[i]) {\r\n                            pink_data.push([disp.f[i], disp.v[i]]);\r\n                            resultF.push(disp.v[i])\r\n                        } else {\r\n                            pink_data.push(NaN);\r\n                            resultF.push(NaN)\r\n                        }\r\n                    }\r\n                    this.updateHMLineData(this.chart1_line, white_data, pink_data);\r\n                    this.updateHMLineData(this.chart2_line, white_data, pink_data);\r\n                    this.updateHMLineData(this.chart3_line, white_data, pink_data);\r\n                    let black_data = [], black_xData = [], black_yData = [];\r\n                    for (let i = 0, len = pink_data.length; i < len; i++) {\r\n                        if (Array.isArray(pink_data[i])) {\r\n                            black_data.push([disp.v[i], disp.v[i] / disp.f[i] / 2]);\r\n                            black_xData.push(disp.v[i]);\r\n                            black_yData.push(disp.v[i] / disp.f[i] / 2);\r\n                        }\r\n                    }\r\n                    this.updateLineData(this.chart4, black_xData, black_yData, black_data);\r\n                    this.setState({\r\n                        white_data, disp, pink_data, black_data, black_xData, black_yData, resultF, prevPosition: position\r\n                    });\r\n                }\r\n            }\r\n        )\r\n        line.getZr().on(\"mouseup\", () => {\r\n            this.setState({ prevPosition: undefined });\r\n        })\r\n        line.getZr().on(\"mouseout\", () => {\r\n            this.setState({ prevPosition: undefined });\r\n        })\r\n        line.getZr().on(\r\n            'click', params => {\r\n                let { event, offsetX } = params;\r\n                let currentPositionX = (offsetX - grid.left) / (event.target.offsetWidth - grid.left - grid.right) * (getMax(heatmap_xData) - getMin(heatmap_xData)) + getMin(heatmap_xData);\r\n                let { white_data, white_data_copy } = this.state;\r\n                if (!white_data_copy) {\r\n                    white_data_copy = JSON.parse(JSON.stringify(white_data));\r\n                }\r\n                let distenceArr = white_data.map((position, i) => Math.abs(currentPositionX - position[0]));\r\n                let dataIndex = getMinIndex(distenceArr);\r\n                if (event.button === 0) {\r\n                    if (event.shiftKey || event.ctrlKey) {\r\n                        if (event.shiftKey) {\r\n                            for (let i = 0, len = white_data.length; i < len; i++) {\r\n                                if (i > dataIndex) {\r\n                                    white_data[i] = NaN;\r\n                                }\r\n                                if (i > dataIndex + 3) {\r\n                                    white_data_copy[i] = NaN;\r\n                                }\r\n                            }\r\n                        } else if (event.ctrlKey) {\r\n                            for (let i = 0, len = white_data.length; i < len; i++) {\r\n                                if (i < dataIndex) {\r\n                                    white_data[i] = NaN;\r\n                                }\r\n                                if (i < dataIndex - 2) {\r\n                                    white_data_copy[i] = NaN;\r\n                                }\r\n                            }\r\n                        }\r\n                        let { proc_F, vout, disp } = this.state;\r\n                        let proc_V = white_data_copy.map(arr => Array.isArray(arr) ? arr[1] : NaN);\r\n                        disp.v = interp_multiPoint(proc_F, proc_V, proc_F.length, vout, new Array(vout.length), vout.length)\r\n                        let pink_data = [], resultF = [];\r\n                        for (let i = 0, len = disp.f.length; i < len; i++) {\r\n                            if (disp.f[i] && disp.v[i]) {\r\n                                pink_data.push([disp.f[i], disp.v[i]]);\r\n                                resultF.push(disp.v[i])\r\n                            } else {\r\n                                pink_data.push(NaN);\r\n                                resultF.push(NaN)\r\n                            }\r\n                        }\r\n                        let black_data = [], black_xData = [], black_yData = [];\r\n                        for (let i = 0, len = pink_data.length; i < len; i++) {\r\n                            if (Array.isArray(pink_data[i])) {\r\n                                black_data.push([disp.v[i], disp.v[i] / disp.f[i] / 2]);\r\n                                black_xData.push(disp.v[i]);\r\n                                black_yData.push(disp.v[i] / disp.f[i] / 2);\r\n                            }\r\n                        }\r\n                        this.updateHMLineData(this.chart1_line, white_data, pink_data);\r\n                        this.updateHMLineData(this.chart2_line, white_data, pink_data);\r\n                        this.updateHMLineData(this.chart3_line, white_data, pink_data);\r\n                        this.updateLineData(this.chart4, black_xData, black_yData, black_data);\r\n                        this.setState({ pink_data, black_data, white_data, resultF, disp, white_data_copy });\r\n                    }\r\n                }\r\n            }\r\n        )\r\n    }\r\n    updateHMLineData = (line, white_data, pinkData) => {\r\n        line.setOption({\r\n            series: [\r\n                {\r\n                    id: \"a\",\r\n                    data: white_data\r\n                },\r\n                {\r\n                    id: 'b',\r\n                    data: pinkData\r\n                }]\r\n        })\r\n    }\r\n    lineRender = () => {\r\n        let { pink_data, disp } = this.state;\r\n        let black_data = [], black_xData = [], black_yData = [];\r\n        for (let i = 0, len = pink_data.length; i < len; i++) {\r\n            if (Array.isArray(pink_data[i])) {\r\n                black_data.push([disp.v[i], disp.v[i] / disp.f[i] / 2]);\r\n                black_xData.push(disp.v[i]);\r\n                black_yData.push(disp.v[i] / disp.f[i] / 2);\r\n            }\r\n        }\r\n        this.setState({ black_data, black_xData, black_yData });\r\n        let black_option = {\r\n            tooltip: {\r\n                formatter: function (params) {\r\n                    return 'f: ' + params.data[0].toFixed(4) + '<br>v: ' + params.data[1].toFixed(4);\r\n                }\r\n            },\r\n            grid: {\r\n                right: 20,\r\n                left: 60,\r\n                top: 20,\r\n                bottom: 40\r\n            },\r\n            xAxis: {\r\n                type: 'value',\r\n                name: \"Phase velocity (km/s)\",\r\n                nameLocation: \"middle\",\r\n                nameGap: 25,\r\n                data: black_xData,\r\n                show: true,\r\n                max: formatDecimal(Math.max(...black_xData), 1) + 0.1,\r\n                min: formatDecimal(Math.min(...black_xData), 1)\r\n            },\r\n            yAxis: {\r\n                type: 'value',\r\n                name: \"wavelength/2 (km)\",\r\n                nameLocation: \"middle\",\r\n                nameGap: 25,\r\n                data: black_yData,\r\n                inverse: true,\r\n                show: true,\r\n                max: formatDecimal(Math.max(...black_yData), 1) + 0.1,\r\n                min: formatDecimal(Math.min(...black_yData), 1)\r\n            },\r\n            series: [\r\n                {\r\n                    id: \"a\",\r\n                    type: 'line',\r\n                    symbol: 'circle',\r\n                    smooth: true,\r\n                    symbolSize: 2,\r\n                    data: black_data,\r\n                    itemStyle: {\r\n                        color: \"#000\"\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n        this.chart4.setOption(black_option);\r\n    }\r\n    updateLineData = (line, black_xData, black_yData, black_data) => {\r\n        line.setOption({\r\n            xAxis: {\r\n                max: black_xData.length > 0 ? formatDecimal(Math.max(...black_xData), 1) + 0.1 : 1,\r\n                min: black_xData.length > 0 ? formatDecimal(Math.min(...black_xData), 1) : 0\r\n            },\r\n            yAxis: {\r\n                max: black_yData.length > 0 ? formatDecimal(Math.max(...black_yData), 1) + 0.1 : 1,\r\n                min: black_yData.length > 0 ? formatDecimal(Math.min(...black_yData), 1) : 0\r\n            },\r\n            series: {\r\n                data: black_data\r\n            }\r\n        })\r\n    }\r\n    handleSelect = (selectedKeys, info) => {\r\n        this.handleClear();\r\n        this.getData(info.node.title);\r\n        this.setState({ fileName: info.node.title });\r\n    }\r\n    handleChangeInput = (key, e) => {\r\n        this.setState({ [key]: Number(e.target.value) });\r\n    }\r\n    handleChangeData = e => {\r\n        this.setState({\r\n            dataType: e.target.value,\r\n            white_data_copy: undefined\r\n        }, () => {\r\n            if (this.state.loaded) {\r\n                this.getDisp(1);\r\n            }\r\n        });\r\n    }\r\n    handleCalculate = () => {\r\n        if (this.state.loaded) {\r\n            this.getDisp(1);\r\n        } else {\r\n            message.info(\"请选择数据文件\");\r\n        }\r\n    }\r\n    handleClear = () => {\r\n        let clearHeatmap = (chart) => {\r\n            chart.clear();\r\n            chart.setOption({\r\n                grid: {\r\n                    right: 20,\r\n                    left: 60,\r\n                    top: 20,\r\n                    bottom: 40,\r\n                },\r\n                xAxis: {\r\n                    type: 'value',\r\n                    name: \"\",\r\n                    splitNumber: 10,\r\n                    min: 0,\r\n                    max: 1\r\n                },\r\n                yAxis: {\r\n                    type: 'value',\r\n                    name: \"\",\r\n                    splitNumber: 10,\r\n                    min: 0,\r\n                    max: 1,\r\n                    inverse: false\r\n                },\r\n                series: {\r\n                    id: \"a\",\r\n                    type: 'line',\r\n                    data: []\r\n                }\r\n            }, true)\r\n        }\r\n        let clearLine = (chart) => {\r\n            chart.clear();\r\n            chart.setOption({\r\n                grid: {\r\n                    right: 20,\r\n                    left: 60,\r\n                    top: 20,\r\n                    bottom: 40\r\n                },\r\n                xAxis: {\r\n                    name: \"\",\r\n                    show: false\r\n                },\r\n                yAxis: {\r\n                    name: \"\",\r\n                    show: false\r\n                },\r\n                series: {\r\n                    id: \"a\",\r\n                    type: 'line',\r\n                    data: []\r\n                }\r\n            }, true)\r\n        }\r\n        this.setState({\r\n            loaded: false,\r\n            white_data: [],\r\n            white_data_copy: undefined,\r\n            pink_data: [],\r\n            black_data: [],\r\n            black_xData: [],\r\n            black_yData: [],\r\n        }, () => {\r\n            clearHeatmap(this.chart1_heatmap);\r\n            clearLine(this.chart1_line);\r\n            clearHeatmap(this.chart2_heatmap);\r\n            clearLine(this.chart2_line);\r\n            clearHeatmap(this.chart3_heatmap);\r\n            clearLine(this.chart3_line);\r\n            clearHeatmap(this.chart4);\r\n        });\r\n    }\r\n    handleSave = () => {\r\n        let { resultV, resultF, loaded, fileName } = this.state\r\n        if (loaded) {\r\n            resultF = resultF.map(item => item.toFixed(4))\r\n            var elementA = document.createElement('a');\r\n            elementA.download = fileName + \".disper\";//文件名\r\n            //隐藏dom点不显示\r\n            elementA.style.display = 'none';\r\n            var blob = new Blob([`${resultV} \\r\\n${resultF} `]);//二进制\r\n            elementA.href = URL.createObjectURL(blob);\r\n            document.body.appendChild(elementA);\r\n            elementA.click();\r\n            document.body.removeChild(elementA);\r\n        } else {\r\n            message.info(\"请选择数据文件\");\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        this.chart1_heatmap.dispose();\r\n        this.chart1_line.dispose();\r\n        this.chart2_heatmap.dispose();\r\n        this.chart2_line.dispose();\r\n        this.chart3_heatmap.dispose();\r\n        this.chart3_line.dispose();\r\n        this.chart4.dispose();\r\n    }\r\n    render() {\r\n        const { treeData, fmin, fmax, Tout_min, dTout, Tout_max, dataType } = this.state;\r\n        return (\r\n            <div id=\"main\" style={{ width: \"100vw\", height: \"100vh\", padding: 16, fontSize: 14 }}>\r\n                <div style={{ height: \"100%\", display: \"flex\", alignItems: \"flex-start\" }}>\r\n                    <div className=\"param-panel\" style={{ width: 310, height: \"100%\" }} >\r\n                        <div className=\"box\" style={{ padding: 0 }}>\r\n                            <div className=\"box-title\">Select a Data</div>\r\n                            <div className=\"box-content\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                <Tree treeData={treeData} onSelect={this.handleSelect} blockNode={true} checkable={false} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"box\">\r\n                            <div className=\"box-title\">Analysis Parameters</div>\r\n                            <div className=\"box-content\">\r\n                                <div className=\"column\">\r\n                                    <div className=\"row\">\r\n                                        <label>fmin</label><Input defaultValue={fmin} onChange={this.handleChangeInput.bind(this, \"fmin\")} />\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <label>fmax</label><Input defaultValue={fmax} onChange={this.handleChangeInput.bind(this, \"fmax\")} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"column\">\r\n                                    <div className=\"row\">\r\n                                        <label>Tout_min</label><Input defaultValue={Tout_min} onChange={this.handleChangeInput.bind(this, \"Tout_min\")} />\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <label>dTout</label><Input defaultValue={dTout} onChange={this.handleChangeInput.bind(this, \"dTout\")} />\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <label>Tout_max</label><Input defaultValue={Tout_max} onChange={this.handleChangeInput.bind(this, \"Tout_max\")} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ textAlign: \"center\", padding: \"8px 8px 0\" }}>\r\n                                <Button type=\"primary\" onClick={this.handleCalculate}>Calculate</Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"box\">\r\n                            <div className=\"box-title\">Select a Method</div>\r\n                            <div className=\"box-content\" style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                <Radio.Group onChange={this.handleChangeData} defaultValue={dataType}>\r\n                                    <Radio value={\"A2B\"}>A-&gt;B</Radio>\r\n                                    <Radio value={\"B2A\"}>B-&gt;A</Radio>\r\n                                    <Radio value={\"SYM\"}>SYM</Radio>\r\n                                </Radio.Group>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"box\">\r\n                            <div className=\"box-title\">Dispersion</div>\r\n                            <div className=\"box-content\" style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                                <Button type=\"primary\" style={{ width: \"33%\", height: 42 }} onClick={this.handleClear}>Clear</Button>\r\n                                <Button type=\"primary\" style={{ width: \"33%\", height: 42 }} onClick={this.handleSave}>Save</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ position: \"relative\", height: \"100%\", width: \"calc((100% - 310px) / 3 * 2)\" }}>\r\n                        <div className=\"chart-container\">\r\n                            <div id=\"chart1_heatmap\" className=\"chart\" />\r\n                            <div id=\"chart1_line\" className=\"chart\" />\r\n                            <div id=\"chart1_loading_mask\" className=\"loading_mask\"><Spin tip=\"Loading...\" /></div>\r\n                        </div>\r\n                        <div className=\"chart-container\">\r\n                            <div id=\"chart2_heatmap\" className=\"chart\" />\r\n                            <div id=\"chart2_line\" className=\"chart\" />\r\n                            <div id=\"chart2_loading_mask\" className=\"loading_mask\"><Spin tip=\"Loading...\" /></div>\r\n                        </div>\r\n                        <div className=\"chart-container\">\r\n                            <div id=\"chart3_heatmap\" className=\"chart\" />\r\n                            <div id=\"chart3_line\" className=\"chart\" />\r\n                            <div id=\"chart3_loading_mask\" className=\"loading_mask\"><Spin tip=\"Loading...\" /></div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"chart4\" style={{ width: \"calc((100% - 310px) / 3)\", height: \"100%\" }} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n} "],"sourceRoot":""}