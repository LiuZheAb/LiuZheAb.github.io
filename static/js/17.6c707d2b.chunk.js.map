{"version":3,"sources":["components/Directory/index.js","components/GOJS/Chapters/05.js","../node_modules/codemirror/mode lazy /^/.*/.js$/ groupOptions: {} namespace object"],"names":["index","props","bindHandleScroll","event","scrollTop","srcElement","documentElement","window","pageYOffset","body","setState","scrollToAnchor","anchorName","anchorElement","document","getElementById","scrollIntoView","state","articleTree","header","before","scrollY","directory","getElementsByClassName","offsetTop","addEventListener","this","onscroll","footer","H","offsetParent","s","offsetHeight","style","after","className","removeEventListener","length","array","i","targetObj","name","push","targetIndex","findIndex","n","map","key","id","paddingLeft","tag","onClick","nextProps","prevState","Component","$","go","GraphObject","make","getArticleTree","bind","childrens","children","nodeName","innerText","title","diagramRender1","diagramRender2","diagramRender3","diagramRender4","diagramRender5","diagramRender6","diagramRender7","diagramRender8","myDiagram","Diagram","nodeTemplate","Node","Shape","figure","fill","Binding","TextBlock","margin","model","GraphLinksModel","color","from","to","initialContentAlignment","Spot","Center","c","nodeTemplateMap","add","desiredSize","Size","category","Panel","alignment","Right","Left","groupTemplateMap","Group","Placeholder","padding","isGroup","group","linkTemplateMap","Link","toArrow","segmentOffset","Point","value","options","theme","mode","readOnly","data-lake-indent","src","require","alt","width","maxWidth","href","target","rel","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","all","slice","t","keys","Object","module","exports"],"mappings":"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AAsB,CACrB,GACA,IAED,eAAgB,CACf,GACA,IAED,mBAAoB,CACnB,GACA,IAED,uBAAwB,CACvB,GACA,IAED,eAAgB,CACf,GACA,IAED,eAAgB,CACf,GACA,EACA,IAED,uBAAwB,CACvB,GACA,IAED,aAAc,CACb,GACA,IAED,qBAAsB,CACrB,GACA,IAED,iBAAkB,CACjB,GACA,EACA,EACA,IAED,6BAA8B,CAC7B,GACA,IAED,yCAA0C,CACzC,GACA,IAED,uBAAwB,CACvB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iCAAkC,CACjC,GACA,EACA,EACA,IAED,2BAA4B,CAC3B,GACA,EACA,EACA,IAED,iBAAkB,CACjB,GACA,IAED,eAAgB,CACf,GACA,IAED,6BAA8B,CAC7B,GACA,GAED,qBAAsB,CACrB,GACA,IAED,eAAgB,CACf,GACA,EACA,IAED,mBAAoB,CACnB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,eAAgB,CACf,IACA,IAED,yBAA0B,CACzB,GACA,GAED,+BAAgC,CAC/B,IACA,IAED,iBAAkB,CACjB,IACA,IAED,YAAa,CACZ,IAED,iBAAkB,CACjB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,mBAAoB,CACnB,IACA,KAED,iBAAkB,CACjB,IACA,IAED,yBAA0B,CACzB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,aAAc,CACb,IACA,KAED,qBAAsB,CACrB,IACA,KAED,mBAAoB,CACnB,IACA,EACA,KAED,iBAAkB,CACjB,IACA,KAED,eAAgB,CACf,IACA,EACA,EACA,EACA,IAED,eAAgB,CACf,IACA,KAED,6BAA8B,CAC7B,IACA,KAED,6BAA8B,CAC7B,IACA,KAED,yBAA0B,CACzB,IACA,KAED,eAAgB,CACf,GACA,EACA,EACA,GAED,qBAAsB,CACrB,IACA,KAED,qBAAsB,CACrB,GACA,KAED,WAAY,CACX,IACA,KAED,WAAY,CACX,IACA,KAED,eAAgB,CACf,IACA,KAED,eAAgB,CACf,IACA,IAED,iBAAkB,CACjB,GACA,KAED,iBAAkB,CACjB,IACA,IAED,eAAgB,CACf,IACA,KAED,iBAAkB,CACjB,GACA,EACA,KAED,qBAAsB,CACrB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,iBAAkB,CACjB,IACA,EACA,EACA,IAED,2BAA4B,CAC3B,IACA,KAED,qBAAsB,CACrB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,eAAgB,CACf,IACA,EACA,EACA,IAED,qBAAsB,CACrB,IACA,KAED,+BAAgC,CAC/B,IACA,KAED,eAAgB,CACf,IACA,KAED,iBAAkB,CACjB,GACA,KAED,qBAAsB,CACrB,GACA,GAED,mBAAoB,CACnB,IACA,KAED,eAAgB,CACf,IACA,KAED,uBAAwB,CACvB,IACA,KAED,6BAA8B,CAC7B,IACA,KAED,iBAAkB,CACjB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,uBAAwB,CACvB,IACA,EACA,EACA,IAED,mBAAoB,CACnB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,iBAAkB,CACjB,IACA,IAED,aAAc,CACb,IACA,KAED,yBAA0B,CACzB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,eAAgB,CACf,IACA,EACA,EACA,EACA,EACA,IAED,qBAAsB,CACrB,IACA,KAED,eAAgB,CACf,GACA,KAED,qBAAsB,CACrB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,yCAA0C,CACzC,IACA,IAED,iBAAkB,CACjB,GACA,KAED,eAAgB,CACf,IACA,MAGF,SAASiF,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEpF,EAAKkF,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAM3F,EAAIkF,GAAMhF,EAAKyF,EAAI,GAC7B,OAAON,QAAQO,IAAID,EAAIE,MAAM,GAAG7F,IAAImF,EAAoBK,IAAID,MAAK,WAChE,OAAOJ,EAAoBW,EAAE5F,EAAI,MAGnC+E,EAAoBc,KAAO,WAC1B,OAAOC,OAAOD,KAAK/F,IAEpBiF,EAAoB/E,GAAK,GACzB+F,EAAOC,QAAUjB","file":"static/js/17.6c707d2b.chunk.js","sourcesContent":["import React, { Component, } from 'react';\r\nimport \"./index.less\";\r\n\r\nexport default class index extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            articleTree: this.props.articleTree,\r\n            scrollTop: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let header = document.getElementById(\"header\");\r\n        let before = window.scrollY;\r\n        let directory = document.getElementsByClassName(\"directory-list\")[0];\r\n        let offsetTop = directory.offsetTop;\r\n        window.addEventListener('scroll', this.bindHandleScroll);\r\n        window.onscroll = function () {\r\n            let footer = document.getElementsByClassName(\"page-footer\")[0], H = 0;\r\n            while (footer) {\r\n                H += footer.offsetTop;\r\n                footer = footer.offsetParent;\r\n            }\r\n            var s = document.body.scrollTop || document.documentElement.scrollTop;\r\n            s = s + (offsetTop + directory.offsetHeight);\r\n            if (s > H) {\r\n                directory.style = `position:fixed;top:${offsetTop - s + H - header.offsetHeight}px;transition:none`;\r\n            } else {\r\n                let after = window.scrollY;\r\n                if (directory) {\r\n                    if (after > header.offsetHeight) {\r\n                        if (before < after) {\r\n                            header.className = \"ant-layout-header header header-affixed\";\r\n                            directory.className = \"directory-list directory-affixed\"\r\n                            before = after;\r\n                        };\r\n                        if (before > after) {\r\n                            header.className = \"ant-layout-header header header-visible\";\r\n                            directory.className = \"directory-list\"\r\n                            before = after;\r\n                        };\r\n                    }\r\n                    directory.style = \"\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n    bindHandleScroll = (event) => {\r\n        const scrollTop = (event.srcElement ? event.srcElement.documentElement.scrollTop : false)\r\n            || window.pageYOffset\r\n            || (event.srcElement ? event.srcElement.body.scrollTop : 0);\r\n        this.setState({ scrollTop });\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.bindHandleScroll);\r\n        this.setState({\r\n            articleTree: this.props.articleTree\r\n        })\r\n    }\r\n    scrollToAnchor = (anchorName) => {\r\n        if (anchorName) {\r\n            let anchorElement = document.getElementById(anchorName);\r\n            if (anchorElement) { anchorElement.scrollIntoView(); }\r\n        }\r\n    }\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        const { articleTree } = nextProps;\r\n        if (articleTree !== prevState.articleTree) {\r\n            return {\r\n                articleTree,\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        let { articleTree, scrollTop } = this.state;\r\n        let length = articleTree.length;\r\n        if (document.getElementById(`tree-num-0`) && length > 0) {\r\n            let array = [];\r\n            for (let i = 0; i < length; i++) {\r\n                let targetObj = document.getElementById(articleTree[i].name);\r\n                array.push(targetObj.offsetTop);\r\n            }\r\n            let targetIndex = array.findIndex((n) => n > scrollTop) - 1;\r\n            for (let i = 0; i < length; i++) {\r\n                i === targetIndex ? document.getElementById(`tree-num-${i}`).className = \"tree-num directory-item-active\" : document.getElementById(`tree-num-${i}`).className = \"tree-num\";\r\n            }\r\n            if (targetIndex === -2) {\r\n                document.getElementById(`tree-num-${length - 1}`).className = \"tree-num directory-item-active\";\r\n            }\r\n        }\r\n        return (\r\n            <ul className=\"directory-list\">\r\n                {articleTree.map((key, index) => {\r\n                    return (\r\n                        <li key={index} id={`tree-num-${index}`} className=\"tree-num\" style={{ paddingLeft: key.tag === \"H2\" ? \"10px\" : \"22px\" }} onClick={() => { this.scrollToAnchor(`${key.name}`) }}>{key.name}</li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport CodeMirror from '@uiw/react-codemirror';\r\nimport 'codemirror/theme/monokai.css';\r\nimport Directory from \"../../Directory\";\r\nimport go from \"gojs\";\r\n\r\nlet $ = go.GraphObject.make;\r\nlet code1 = `let $ = go.GraphObject.make;\r\nlet myDiagram = $(go.Diagram, \"myDiagramDiv\");\r\nmyDiagram.nodeTemplate =\r\n    $(go.Node, \"Auto\",\r\n        $(go.Shape, {\r\n            figure: \"RoundedRectangle\",\r\n            fill: \"white\"\r\n        }, new go.Binding(\"fill\", \"color\")),\r\n        $(go.TextBlock, {\r\n            margin: 5\r\n        }, new go.Binding(\"text\", \"key\"))\r\n    );\r\nlet nodeDataArray = [{\r\n    key: \"Alpha\",\r\n    color: \"lightblue\"\r\n}, {\r\n    key: \"Beta\",\r\n    color: \"pink\"\r\n}];\r\nlet linkDataArray = [{\r\n    from: \"Alpha\",\r\n    to: \"Beta\"\r\n}];\r\nmyDiagram.model = new go.GraphLinksModel(nodeDataArray, linkDataArray);`;\r\nlet code2 = `let myDiagram = $(go.Diagram, \"myDiagramDiv\", {\r\n    initialContentAlignment: go.Spot.Center\r\n});\r\nmyDiagram.nodeTemplate =\r\n    $(go.Node, \"Auto\",\r\n        $(go.Shape, \"RoundedRectangle\",\r\n            new go.Binding(\"fill\", \"color\", function (c) {\r\n                if (c === 0) return \"red\";\r\n                if (c === 1) return \"blue\";\r\n            })),\r\n        $(go.TextBlock, \"Node\"))\r\nmyDiagram.model = new go.GraphLinksModel([{\r\n    key: \"Alpha\",\r\n    color: 0\r\n}, {\r\n    key: \"Alpha\",\r\n    color: 1\r\n}, {\r\n    key: \"Alpha\",\r\n    color: 42\r\n}]);`;\r\nlet code3 = `let myDiagram = $(go.Diagram, \"myDiagramDiv\", {\r\n    initialContentAlignment: go.Spot.Center\r\n});\r\nmyDiagram.nodeTemplateMap.add(\"SimpleNode\",\r\n    $(go.Node, \"Spot\",\r\n        $(go.Shape, \"Rectangle\", {\r\n            fill: \"white\",\r\n            desiredSize: new go.Size(100, 20)\r\n        })\r\n    )\r\n)\r\nmyDiagram.model = new go.GraphLinksModel([{\r\n    key: \"Alpha\",\r\n    category: \"SimpleNode\"\r\n}]);`;\r\nlet code4 = `let myDiagram = $(go.Diagram, \"myDiagramDiv\", {\r\n    initialContentAlignment: go.Spot.Center\r\n});\r\nmyDiagram.nodeTemplateMap.add(\"SimpleNode\",\r\n    $(go.Node, \"Spot\",\r\n        $(go.Shape, \"Rectangle\", {\r\n            fill: \"white\",\r\n            desiredSize: new go.Size(100, 20)\r\n        }),\r\n        $(go.Panel),\r\n        $(go.Shape, \"TriangleUp\", {\r\n            fill: \"white\",\r\n            desiredSize: new go.Size(20, 20),\r\n            alignment: go.Spot.Right\r\n        })\r\n    )\r\n)\r\nmyDiagram.model = new go.GraphLinksModel([{\r\n    key: \"Alpha\",\r\n    category: \"SimpleNode\"\r\n}]);`;\r\nlet code5 = `let myDiagram = $(go.Diagram, \"myDiagramDiv\", {\r\n    initialContentAlignment: go.Spot.Center\r\n});\r\nmyDiagram.nodeTemplateMap.add(\"SimpleNode\",\r\n    $(go.Node, \"Spot\",\r\n        $(go.Shape, \"Rectangle\", {\r\n            fill: \"white\",\r\n            desiredSize: new go.Size(100, 20)\r\n        }),\r\n        $(go.Panel, \"Auto\", {\r\n                alignment: go.Spot.Left\r\n            },\r\n            $(go.Shape, \"Ellipse\", {\r\n                fill: \"white\"\r\n            }),\r\n            $(go.TextBlock, \"SimpleNode\")\r\n        ),\r\n        $(go.Shape, \"TriangleUp\", {\r\n            fill: \"white\",\r\n            desiredSize: new go.Size(20, 20),\r\n            alignment: go.Spot.Right\r\n        })\r\n    )\r\n)\r\nmyDiagram.model = new go.GraphLinksModel([{\r\n    key: \"Alpha\",\r\n    category: \"SimpleNode\"\r\n}]);`;\r\nlet code6 = `myDiagram.groupTemplateMap.add(\"SimpleGroup\",\r\n    $(go.Group, \"Vertical\",\r\n        $(go.TextBlock, \"Group\"),\r\n        $(go.Panel, \"Auto\",\r\n            $(go.Shape, \"RoundedRectangle\", {\r\n                fill: \"beige\"\r\n            }),\r\n            $(go.Placeholder,{padding:5})\r\n        )\r\n    ))\r\nmyDiagram.model = new go.GraphLinksModel([{\r\n    key: \"Alpha\",\r\n    category: \"SimpleNode\"\r\n},{\r\n    key: \"Beta\",\r\n    isGroup:true,\r\n    category: \"SimpleGroup\"\r\n},{\r\n    key: \"Gamma\",\r\n    group:\"Beta\",\r\n    category: \"SimpleNode\"\r\n},{\r\n    key: \"Delta\",\r\n    group:\"Beta\",\r\n    category: \"SimpleNode\"\r\n}]);\r\n};`;\r\nlet code7 = `myDiagram.linkTemplateMap.add(\"SimpleLink\",\r\n    $(go.Link,\r\n        $(go.Shape),\r\n        $(go.Shape, {\r\n            toArrow: \"Standard\"\r\n        }),\r\n        $(go.TextBlock, \"Link\", {\r\n            segmentOffset: new go.Point(0, 10)\r\n        }),\r\n    )\r\n)`;\r\nlet code8 = `myDiagram.nodeTemplateMap.add(\"SimpleNode\",\r\n    $(go.Node, \"Spot\",\r\n        $(go.Shape, \"Rectangle\", {\r\n            fill: \"white\",\r\n            desiredSize: new go.Size(100, 20)\r\n        }),\r\n        $(go.Panel, \"Auto\", {\r\n                alignment: go.Spot.Left\r\n            },\r\n            $(go.Shape, \"Ellipse\", {\r\n                    fill: \"white\"\r\n                },\r\n                new go.Binding(\"fill\", \"color\", function (color) {\r\n                    return color === 0 ? \"lime\" : \"cyan\";\r\n                })\r\n            ),\r\n            $(go.TextBlock, \"SimpleNode\",\r\n                new go.Binding(\"text\", \"key\")\r\n            )\r\n        ),\r\n        $(go.Shape, \"TriangleUp\", {\r\n            fill: \"white\",\r\n            desiredSize: new go.Size(20, 20),\r\n            alignment: go.Spot.Right\r\n        })\r\n    )\r\n);\r\n\r\nmyDiagram3.model = new go.GraphLinksModel([{\r\n    key: \"Alpha\",\r\n    category: \"SimpleNode\"\r\n}, {\r\n    key: \"Beta\",\r\n    isGroup: true,\r\n    category: \"SimpleGroup\"\r\n}, {\r\n    key: \"Gamma\",\r\n    group: \"Beta\",\r\n    category: \"SimpleNode\",\r\n    color: 0\r\n}, {\r\n    key: \"Delta\",\r\n    group: \"Beta\",\r\n    category: \"SimpleNode\",\r\n    color: 1\r\n}],\r\n[{\r\n    from: \"Alpha\",\r\n    to: \"Beta\",\r\n    category: \"SimpleLink\"\r\n}]);`;\r\nlet code9 = `myDiagram.model = new go.GraphLinksModel(\r\n    [\r\n        { key: \"Alpha\", color: \"lightblue\", category: \"Square\" }\r\n    ],[\r\n    ]\r\n)`;\r\nlet code10=`new go.Binding(\"fill\",\"color\"),  //binding to get fill from nodedata.color`\r\n\r\nexport default class index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            articleTree: []\r\n        };\r\n        this.getArticleTree = this.getArticleTree.bind(this);\r\n    }\r\n    getArticleTree() {\r\n        let childrens = document.getElementsByClassName(\"article-content\")[0].children;\r\n        let articleTree = [];\r\n        for (let i = 0; i < childrens.length - 1; i++) {\r\n            let nodeName = childrens[i].nodeName;\r\n            if (nodeName === \"H2\" || nodeName === \"H3\") {\r\n                childrens[i].id = childrens[i].innerText;\r\n                articleTree.push({\r\n                    name: childrens[i].innerText,\r\n                    tag: childrens[i].nodeName\r\n                });\r\n            }\r\n        }\r\n        this.setState({ articleTree });\r\n    }\r\n    componentDidMount() {\r\n        document.title=\"GoJS教程——第五节 使用GoJS构建Parts(Templates)\";\r\n        this.getArticleTree();\r\n        this.diagramRender1();\r\n        this.diagramRender2();\r\n        this.diagramRender3();\r\n        this.diagramRender4();\r\n        this.diagramRender5();\r\n        this.diagramRender6();\r\n        this.diagramRender7();\r\n        this.diagramRender8();\r\n    }\r\n    diagramRender1() {\r\n        let myDiagram = $(go.Diagram, \"myDiagramDiv1\");\r\n        myDiagram.nodeTemplate =\r\n            $(go.Node, \"Auto\",\r\n                $(go.Shape, {\r\n                    figure: \"RoundedRectangle\",\r\n                    fill: \"white\"\r\n                }, new go.Binding(\"fill\", \"color\")),\r\n                $(go.TextBlock, {\r\n                    margin: 5\r\n                }, new go.Binding(\"text\", \"key\"))\r\n            );\r\n        let nodeDataArray = [{\r\n            key: \"Alpha\",\r\n            color: \"lightblue\"\r\n        }, {\r\n            key: \"Beta\",\r\n            color: \"pink\"\r\n        }];\r\n        let linkDataArray = [{\r\n            from: \"Alpha\",\r\n            to: \"Beta\"\r\n        }];\r\n        myDiagram.model = new go.GraphLinksModel(nodeDataArray, linkDataArray);\r\n    }\r\n    diagramRender2() {\r\n        let myDiagram = $(go.Diagram, \"myDiagramDiv2\", {\r\n            initialContentAlignment: go.Spot.Center\r\n        });\r\n        myDiagram.nodeTemplate =\r\n            $(go.Node, \"Auto\",\r\n                $(go.Shape, \"RoundedRectangle\",\r\n                    new go.Binding(\"fill\", \"color\", function (c) {\r\n                        if (c === 0) return \"red\";\r\n                        if (c === 1) return \"blue\";\r\n                    })),\r\n                $(go.TextBlock, \"Node\"))\r\n        myDiagram.model = new go.GraphLinksModel([{\r\n            key: \"Alpha\",\r\n            color: 0\r\n        }, {\r\n            key: \"Alpha\",\r\n            color: 1\r\n        }, {\r\n            key: \"Alpha\",\r\n            color: 42\r\n        }]);\r\n    }\r\n    diagramRender3() {\r\n        let myDiagram = $(go.Diagram, \"myDiagramDiv3\", {\r\n            initialContentAlignment: go.Spot.Center\r\n        });\r\n        myDiagram.nodeTemplateMap.add(\"SimpleNode\",\r\n            $(go.Node, \"Spot\",\r\n                $(go.Shape, \"Rectangle\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(100, 20)\r\n                })\r\n            )\r\n        )\r\n        myDiagram.model = new go.GraphLinksModel([{\r\n            key: \"Alpha\",\r\n            category: \"SimpleNode\"\r\n        }]);\r\n    }\r\n    diagramRender4() {\r\n        let myDiagram = $(go.Diagram, \"myDiagramDiv4\", {\r\n            initialContentAlignment: go.Spot.Center\r\n        });\r\n        myDiagram.nodeTemplateMap.add(\"SimpleNode\",\r\n            $(go.Node, \"Spot\",\r\n                $(go.Shape, \"Rectangle\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(100, 20)\r\n                }),\r\n                $(go.Panel),\r\n                $(go.Shape, \"TriangleUp\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(20, 20),\r\n                    alignment: go.Spot.Right\r\n                })\r\n            )\r\n        )\r\n        myDiagram.model = new go.GraphLinksModel([{\r\n            key: \"Alpha\",\r\n            category: \"SimpleNode\"\r\n        }]);\r\n    }\r\n    diagramRender5() {\r\n        let myDiagram = $(go.Diagram, \"myDiagramDiv5\", {\r\n            initialContentAlignment: go.Spot.Center\r\n        });\r\n        myDiagram.nodeTemplateMap.add(\"SimpleNode\",\r\n            $(go.Node, \"Spot\",\r\n                $(go.Shape, \"Rectangle\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(100, 20)\r\n                }),\r\n                $(go.Panel, \"Auto\", {\r\n                    alignment: go.Spot.Left\r\n                },\r\n                    $(go.Shape, \"Ellipse\", {\r\n                        fill: \"white\"\r\n                    }),\r\n                    $(go.TextBlock, \"SimpleNode\")\r\n                ),\r\n                $(go.Shape, \"TriangleUp\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(20, 20),\r\n                    alignment: go.Spot.Right\r\n                })\r\n            )\r\n        )\r\n        myDiagram.model = new go.GraphLinksModel([{\r\n            key: \"Alpha\",\r\n            category: \"SimpleNode\"\r\n        }]);\r\n    }\r\n    diagramRender6() {\r\n        let myDiagram = $(go.Diagram, \"myDiagramDiv6\", {\r\n            initialContentAlignment: go.Spot.Center\r\n        });\r\n        myDiagram.nodeTemplateMap.add(\"SimpleNode\",\r\n            $(go.Node, \"Spot\",\r\n                $(go.Shape, \"Rectangle\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(100, 20)\r\n                }),\r\n                $(go.Panel, \"Auto\", {\r\n                    alignment: go.Spot.Left\r\n                },\r\n                    $(go.Shape, \"Ellipse\", {\r\n                        fill: \"white\"\r\n                    }),\r\n                    $(go.TextBlock, \"SimpleNode\")\r\n                ),\r\n                $(go.Shape, \"TriangleUp\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(20, 20),\r\n                    alignment: go.Spot.Right\r\n                })\r\n            )\r\n        )\r\n        myDiagram.groupTemplateMap.add(\"SimpleGroup\",\r\n            $(go.Group, \"Vertical\",\r\n                $(go.TextBlock, \"Group\"),\r\n                $(go.Panel, \"Auto\",\r\n                    $(go.Shape, \"RoundedRectangle\", {\r\n                        fill: \"beige\"\r\n                    }),\r\n                    $(go.Placeholder, { padding: 5 })\r\n                )\r\n            ))\r\n        myDiagram.model = new go.GraphLinksModel([{\r\n            key: \"Alpha\",\r\n            category: \"SimpleNode\"\r\n        }, {\r\n            key: \"Beta\",\r\n            isGroup: true,\r\n            category: \"SimpleGroup\"\r\n        }, {\r\n            key: \"Gamma\",\r\n            group: \"Beta\",\r\n            category: \"SimpleNode\"\r\n        }, {\r\n            key: \"Delta\",\r\n            group: \"Beta\",\r\n            category: \"SimpleNode\"\r\n        }]);\r\n    }\r\n    diagramRender7() {\r\n        let myDiagram = $(go.Diagram, \"myDiagramDiv7\", {\r\n            initialContentAlignment: go.Spot.Center\r\n        });\r\n        myDiagram.nodeTemplateMap.add(\"SimpleNode\",\r\n            $(go.Node, \"Spot\",\r\n                $(go.Shape, \"Rectangle\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(100, 20)\r\n                }),\r\n                $(go.Panel, \"Auto\", {\r\n                    alignment: go.Spot.Left\r\n                },\r\n                    $(go.Shape, \"Ellipse\", {\r\n                        fill: \"white\"\r\n                    }),\r\n                    $(go.TextBlock, \"SimpleNode\")\r\n                ),\r\n                $(go.Shape, \"TriangleUp\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(20, 20),\r\n                    alignment: go.Spot.Right\r\n                })\r\n            )\r\n        )\r\n        myDiagram.linkTemplateMap.add(\"SimpleLink\",\r\n            $(go.Link,\r\n                $(go.Shape),\r\n                $(go.Shape, {\r\n                    toArrow: \"Standard\"\r\n                }),\r\n                $(go.TextBlock, \"Link\", {\r\n                    segmentOffset: new go.Point(0, 10)\r\n                }),\r\n            )\r\n        )\r\n        myDiagram.groupTemplateMap.add(\"SimpleGroup\",\r\n            $(go.Group, \"Vertical\",\r\n                $(go.TextBlock, \"Group\"),\r\n                $(go.Panel, \"Auto\",\r\n                    $(go.Shape, \"RoundedRectangle\", {\r\n                        fill: \"beige\"\r\n                    }),\r\n                    $(go.Placeholder, { padding: 5 })\r\n                )\r\n            ))\r\n        myDiagram.model = new go.GraphLinksModel([{\r\n            key: \"Alpha\",\r\n            category: \"SimpleNode\"\r\n        }, {\r\n            key: \"Beta\",\r\n            isGroup: true,\r\n            category: \"SimpleGroup\"\r\n        }, {\r\n            key: \"Gamma\",\r\n            group: \"Beta\",\r\n            category: \"SimpleNode\"\r\n        }, {\r\n            key: \"Delta\",\r\n            group: \"Beta\",\r\n            category: \"SimpleNode\"\r\n        }],\r\n            [{\r\n                from: \"Alpha\",\r\n                to: \"Beta\",\r\n                category: \"SimpleLink\"\r\n            }]);\r\n    }\r\n    diagramRender8() {\r\n        let myDiagram = $(go.Diagram, \"myDiagramDiv8\", {\r\n            initialContentAlignment: go.Spot.Center\r\n        });\r\n        myDiagram.nodeTemplateMap.add(\"SimpleNode\",\r\n            $(go.Node, \"Spot\",\r\n                $(go.Shape, \"Rectangle\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(100, 20)\r\n                }),\r\n                $(go.Panel, \"Auto\", {\r\n                    alignment: go.Spot.Left\r\n                },\r\n                    $(go.Shape, \"Ellipse\", {\r\n                        fill: \"white\"\r\n                    },\r\n                        new go.Binding(\"fill\", \"color\", function (color) {\r\n                            return color === 0 ? \"lime\" : \"cyan\";\r\n                        })\r\n                    ),\r\n                    $(go.TextBlock, \"SimpleNode\",\r\n                        new go.Binding(\"text\", \"key\")\r\n                    )\r\n                ),\r\n                $(go.Shape, \"TriangleUp\", {\r\n                    fill: \"white\",\r\n                    desiredSize: new go.Size(20, 20),\r\n                    alignment: go.Spot.Right\r\n                })\r\n            )\r\n        )\r\n        myDiagram.linkTemplateMap.add(\"SimpleLink\",\r\n            $(go.Link,\r\n                $(go.Shape),\r\n                $(go.Shape, {\r\n                    toArrow: \"Standard\"\r\n                }),\r\n                $(go.TextBlock, \"Link\", {\r\n                    segmentOffset: new go.Point(0, 10)\r\n                }),\r\n            )\r\n        )\r\n        myDiagram.groupTemplateMap.add(\"SimpleGroup\",\r\n            $(go.Group, \"Vertical\",\r\n                $(go.TextBlock, \"Group\"),\r\n                $(go.Panel, \"Auto\",\r\n                    $(go.Shape, \"RoundedRectangle\", {\r\n                        fill: \"beige\"\r\n                    }),\r\n                    $(go.Placeholder, {\r\n                        padding: 5\r\n                    })\r\n                )\r\n            ))\r\n        myDiagram.model = new go.GraphLinksModel([{\r\n            key: \"Alpha\",\r\n            category: \"SimpleNode\"\r\n        }, {\r\n            key: \"Beta\",\r\n            isGroup: true,\r\n            category: \"SimpleGroup\"\r\n        }, {\r\n            key: \"Gamma\",\r\n            group: \"Beta\",\r\n            category: \"SimpleNode\",\r\n            color: 0\r\n        }, {\r\n            key: \"Delta\",\r\n            group: \"Beta\",\r\n            category: \"SimpleNode\",\r\n            color: 1\r\n        }],\r\n            [{\r\n                from: \"Alpha\",\r\n                to: \"Beta\",\r\n                category: \"SimpleLink\"\r\n            }]);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"page-content\">\r\n                <div className=\"article\">\r\n                    <div className=\"article-title\">\r\n                        <h1>第五节 使用GoJS构建Parts(Templates)</h1>\r\n                    </div>\r\n                    <div className=\"article-content\">\r\n                        <p>先看下面的代码：</p>\r\n                        <CodeMirror\r\n                            value={code1}\r\n                            options={{\r\n                                theme: 'monokai',\r\n                                mode: 'JSX',\r\n                                readOnly: true\r\n                            }}\r\n                        />\r\n                        <div id=\"myDiagramDiv1\" className=\"diagram\"></div>\r\n                        <h2>使用Templates</h2>\r\n                        <ul>\r\n                            <li>每个Model数据对象中的“category”数据属性指定用于该对象的模板</li>\r\n                        </ul>\r\n                        <ul data-lake-indent=\"1\">\r\n                            <li>“category”数据属性的值对应于templateMap中某一项的键值(比如nodeTemplateMap)</li>\r\n                        </ul>\r\n                        <ul>\r\n                            <li>GoJS支持nodeTemplateMap、linkTemplateMap和groupTemplateMap</li>\r\n                        </ul>\r\n                        <ul data-lake-indent=\"1\">\r\n                            <li>{`添加到映射:<supported part template map>.add(<key>,<Part>)`}</li>\r\n                        </ul>\r\n                        <p>如下图所示</p>\r\n                        <div className=\"text-center\">\r\n                            <img src={require(\"../../../assets/images/20200405140043.png\")} alt=\"\" />\r\n                        </div>\r\n                        <h2>数据绑定</h2>\r\n                        <CodeMirror\r\n                            value={code9}\r\n                            options={{\r\n                                theme: 'monokai',\r\n                                mode: 'JSX',\r\n                                readOnly: true\r\n                            }}\r\n                        />\r\n                        <p>上面的代码中,\"color\"是一个客观属性,GoJS并不知道\"color\"是什么,须使用new go.Binding(\"fill\",\"color\"),将data中的color绑定到fill属性</p>\r\n                        <ul>\r\n                            <li>将Part的样式/表现绑定到Model中的某些数据</li>\r\n                            <li>允许Part的数据和可视化之间的通信</li>\r\n                            <li>{`简单绑定:new go.Binding(target property>,<source data property>)`},例如</li>\r\n                        </ul>\r\n                        <CodeMirror\r\n                            value={code10}\r\n                            options={{\r\n                                theme: 'monokai',\r\n                                mode: 'JSX',\r\n                                readOnly: true\r\n                            }}\r\n                        />\r\n                        <h2>转换函数</h2>\r\n                        <ul>\r\n                            <li>函数作为第三个参数传递给go.Binding</li>\r\n                            <li>接收作为参数绑定的Model数据属性的值</li>\r\n                            <li>返回值作为目标GraphObiect属性</li>\r\n                        </ul>\r\n                        <p>代码及效果如下所示：</p>\r\n                        <CodeMirror\r\n                            value={code2}\r\n                            options={{\r\n                                theme: 'monokai',\r\n                                mode: 'JSX',\r\n                                readOnly: true\r\n                            }}\r\n                        />\r\n                        <div id=\"myDiagramDiv2\" className=\"diagram\"></div>\r\n                        <h2>几个Part template的例子</h2>\r\n                        <h3>初始效果</h3>\r\n                        <CodeMirror\r\n                            value={code3}\r\n                            options={{\r\n                                theme: 'monokai',\r\n                                mode: 'JSX',\r\n                                readOnly: true\r\n                            }}\r\n                        />\r\n                        <div id=\"myDiagramDiv3\" className=\"diagram\"></div>\r\n                        <h3>右侧添加三角形</h3>\r\n                        <CodeMirror\r\n                            value={code4}\r\n                            options={{\r\n                                theme: 'monokai',\r\n                                mode: 'JSX',\r\n                                readOnly: true\r\n                            }}\r\n                        />\r\n                        <div id=\"myDiagramDiv4\" className=\"diagram\"></div>\r\n                        <h3>左侧添加椭圆</h3>\r\n                        <CodeMirror\r\n                            value={code5}\r\n                            options={{\r\n                                theme: 'monokai',\r\n                                mode: 'JSX',\r\n                                readOnly: true\r\n                            }}\r\n                        />\r\n                        <div id=\"myDiagramDiv5\" className=\"diagram\"></div>\r\n                        <h3>添加Group</h3>\r\n                        <CodeMirror\r\n                            value={code6}\r\n                            options={{\r\n                                theme: 'monokai',\r\n                                mode: 'JSX',\r\n                                readOnly: true\r\n                            }}\r\n                        />\r\n                        <div id=\"myDiagramDiv6\" className=\"diagram\" style={{ width: \"100%\", maxWidth: \"600px\" }}></div>\r\n                        <h3>添加Link</h3>\r\n                        <CodeMirror\r\n                            value={code7}\r\n                            options={{\r\n                                theme: 'monokai',\r\n                                mode: 'JSX',\r\n                                readOnly: true\r\n                            }}\r\n                        />\r\n                        <div id=\"myDiagramDiv7\" className=\"diagram\" style={{ width: \"100%\", maxWidth: \"600px\" }}></div>\r\n                        <h3>绑定key到text、color到fill</h3>\r\n                        <CodeMirror\r\n                            value={code8}\r\n                            options={{\r\n                                theme: 'monokai',\r\n                                mode: 'JSX',\r\n                                readOnly: true\r\n                            }}\r\n                        />\r\n                        <div id=\"myDiagramDiv8\" className=\"diagram\" style={{ width: \"100%\", maxWidth: \"600px\" }}></div>\r\n                        <br />\r\n                        <br />\r\n                        <p>相关代码：</p>\r\n                        <p><a href=\"https://github.com/LiuZheAb/GoJS_Demo/blob/master/05buildingParts(Templates).html\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/LiuZheAb/GoJS_Demo/blob/master/05buildingParts(Templates).html</a></p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"directory\">\r\n                    <Directory articleTree={this.state.articleTree}></Directory>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","var map = {\n\t\"./apl/apl.js\": [\n\t\t60,\n\t\t56\n\t],\n\t\"./asciiarmor/asciiarmor.js\": [\n\t\t61,\n\t\t57\n\t],\n\t\"./asn.1/asn.1.js\": [\n\t\t62,\n\t\t58\n\t],\n\t\"./asterisk/asterisk.js\": [\n\t\t63,\n\t\t59\n\t],\n\t\"./brainfuck/brainfuck.js\": [\n\t\t64,\n\t\t60\n\t],\n\t\"./clike/clike.js\": [\n\t\t46,\n\t\t3\n\t],\n\t\"./clojure/clojure.js\": [\n\t\t65,\n\t\t61\n\t],\n\t\"./cmake/cmake.js\": [\n\t\t66,\n\t\t62\n\t],\n\t\"./cobol/cobol.js\": [\n\t\t67,\n\t\t63\n\t],\n\t\"./coffeescript/coffeescript.js\": [\n\t\t47,\n\t\t64\n\t],\n\t\"./commonlisp/commonlisp.js\": [\n\t\t68,\n\t\t65\n\t],\n\t\"./crystal/crystal.js\": [\n\t\t69,\n\t\t66\n\t],\n\t\"./css/css.js\": [\n\t\t42,\n\t\t2\n\t],\n\t\"./cypher/cypher.js\": [\n\t\t70,\n\t\t67\n\t],\n\t\"./d/d.js\": [\n\t\t71,\n\t\t68\n\t],\n\t\"./dart/dart.js\": [\n\t\t72,\n\t\t3,\n\t\t69\n\t],\n\t\"./diff/diff.js\": [\n\t\t73,\n\t\t70\n\t],\n\t\"./django/django.js\": [\n\t\t74,\n\t\t1,\n\t\t2,\n\t\t35\n\t],\n\t\"./dockerfile/dockerfile.js\": [\n\t\t75,\n\t\t48\n\t],\n\t\"./dtd/dtd.js\": [\n\t\t76,\n\t\t71\n\t],\n\t\"./dylan/dylan.js\": [\n\t\t77,\n\t\t72\n\t],\n\t\"./ebnf/ebnf.js\": [\n\t\t78,\n\t\t73\n\t],\n\t\"./ecl/ecl.js\": [\n\t\t79,\n\t\t74\n\t],\n\t\"./eiffel/eiffel.js\": [\n\t\t80,\n\t\t75\n\t],\n\t\"./elm/elm.js\": [\n\t\t81,\n\t\t76\n\t],\n\t\"./erlang/erlang.js\": [\n\t\t82,\n\t\t77\n\t],\n\t\"./factor/factor.js\": [\n\t\t83,\n\t\t49\n\t],\n\t\"./fcl/fcl.js\": [\n\t\t84,\n\t\t78\n\t],\n\t\"./forth/forth.js\": [\n\t\t85,\n\t\t79\n\t],\n\t\"./fortran/fortran.js\": [\n\t\t86,\n\t\t80\n\t],\n\t\"./gas/gas.js\": [\n\t\t87,\n\t\t81\n\t],\n\t\"./gfm/gfm.js\": [\n\t\t88,\n\t\t5,\n\t\t47\n\t],\n\t\"./gherkin/gherkin.js\": [\n\t\t89,\n\t\t82\n\t],\n\t\"./go/go.js\": [\n\t\t90,\n\t\t83\n\t],\n\t\"./groovy/groovy.js\": [\n\t\t91,\n\t\t84\n\t],\n\t\"./haml/haml.js\": [\n\t\t92,\n\t\t1,\n\t\t2,\n\t\t38\n\t],\n\t\"./handlebars/handlebars.js\": [\n\t\t48,\n\t\t43\n\t],\n\t\"./haskell-literate/haskell-literate.js\": [\n\t\t93,\n\t\t52\n\t],\n\t\"./haskell/haskell.js\": [\n\t\t49,\n\t\t85\n\t],\n\t\"./haxe/haxe.js\": [\n\t\t94,\n\t\t86\n\t],\n\t\"./htmlembedded/htmlembedded.js\": [\n\t\t95,\n\t\t1,\n\t\t2,\n\t\t34\n\t],\n\t\"./htmlmixed/htmlmixed.js\": [\n\t\t40,\n\t\t1,\n\t\t2,\n\t\t53\n\t],\n\t\"./http/http.js\": [\n\t\t96,\n\t\t87\n\t],\n\t\"./idl/idl.js\": [\n\t\t97,\n\t\t88\n\t],\n\t\"./javascript/javascript.js\": [\n\t\t43,\n\t\t1\n\t],\n\t\"./jinja2/jinja2.js\": [\n\t\t98,\n\t\t89\n\t],\n\t\"./jsx/jsx.js\": [\n\t\t99,\n\t\t1,\n\t\t54\n\t],\n\t\"./julia/julia.js\": [\n\t\t100,\n\t\t90\n\t],\n\t\"./livescript/livescript.js\": [\n\t\t101,\n\t\t91\n\t],\n\t\"./lua/lua.js\": [\n\t\t102,\n\t\t92\n\t],\n\t\"./markdown/markdown.js\": [\n\t\t54,\n\t\t5\n\t],\n\t\"./mathematica/mathematica.js\": [\n\t\t103,\n\t\t93\n\t],\n\t\"./mbox/mbox.js\": [\n\t\t104,\n\t\t94\n\t],\n\t\"./meta.js\": [\n\t\t45\n\t],\n\t\"./mirc/mirc.js\": [\n\t\t105,\n\t\t95\n\t],\n\t\"./mllike/mllike.js\": [\n\t\t106,\n\t\t96\n\t],\n\t\"./modelica/modelica.js\": [\n\t\t107,\n\t\t97\n\t],\n\t\"./mscgen/mscgen.js\": [\n\t\t108,\n\t\t98\n\t],\n\t\"./mumps/mumps.js\": [\n\t\t109,\n\t\t99\n\t],\n\t\"./nginx/nginx.js\": [\n\t\t110,\n\t\t100\n\t],\n\t\"./nsis/nsis.js\": [\n\t\t111,\n\t\t50\n\t],\n\t\"./ntriples/ntriples.js\": [\n\t\t112,\n\t\t101\n\t],\n\t\"./octave/octave.js\": [\n\t\t113,\n\t\t102\n\t],\n\t\"./oz/oz.js\": [\n\t\t114,\n\t\t103\n\t],\n\t\"./pascal/pascal.js\": [\n\t\t115,\n\t\t104\n\t],\n\t\"./pegjs/pegjs.js\": [\n\t\t116,\n\t\t1,\n\t\t105\n\t],\n\t\"./perl/perl.js\": [\n\t\t117,\n\t\t106\n\t],\n\t\"./php/php.js\": [\n\t\t118,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t44\n\t],\n\t\"./pig/pig.js\": [\n\t\t119,\n\t\t107\n\t],\n\t\"./powershell/powershell.js\": [\n\t\t120,\n\t\t108\n\t],\n\t\"./properties/properties.js\": [\n\t\t121,\n\t\t109\n\t],\n\t\"./protobuf/protobuf.js\": [\n\t\t122,\n\t\t110\n\t],\n\t\"./pug/pug.js\": [\n\t\t55,\n\t\t1,\n\t\t2,\n\t\t4\n\t],\n\t\"./puppet/puppet.js\": [\n\t\t123,\n\t\t111\n\t],\n\t\"./python/python.js\": [\n\t\t50,\n\t\t112\n\t],\n\t\"./q/q.js\": [\n\t\t124,\n\t\t113\n\t],\n\t\"./r/r.js\": [\n\t\t125,\n\t\t114\n\t],\n\t\"./rpm/rpm.js\": [\n\t\t126,\n\t\t115\n\t],\n\t\"./rst/rst.js\": [\n\t\t127,\n\t\t37\n\t],\n\t\"./ruby/ruby.js\": [\n\t\t44,\n\t\t116\n\t],\n\t\"./rust/rust.js\": [\n\t\t128,\n\t\t51\n\t],\n\t\"./sas/sas.js\": [\n\t\t129,\n\t\t117\n\t],\n\t\"./sass/sass.js\": [\n\t\t52,\n\t\t2,\n\t\t118\n\t],\n\t\"./scheme/scheme.js\": [\n\t\t130,\n\t\t119\n\t],\n\t\"./shell/shell.js\": [\n\t\t131,\n\t\t120\n\t],\n\t\"./sieve/sieve.js\": [\n\t\t132,\n\t\t121\n\t],\n\t\"./slim/slim.js\": [\n\t\t133,\n\t\t1,\n\t\t2,\n\t\t39\n\t],\n\t\"./smalltalk/smalltalk.js\": [\n\t\t134,\n\t\t122\n\t],\n\t\"./smarty/smarty.js\": [\n\t\t135,\n\t\t123\n\t],\n\t\"./solr/solr.js\": [\n\t\t136,\n\t\t124\n\t],\n\t\"./soy/soy.js\": [\n\t\t137,\n\t\t1,\n\t\t2,\n\t\t45\n\t],\n\t\"./sparql/sparql.js\": [\n\t\t138,\n\t\t125\n\t],\n\t\"./spreadsheet/spreadsheet.js\": [\n\t\t139,\n\t\t126\n\t],\n\t\"./sql/sql.js\": [\n\t\t140,\n\t\t127\n\t],\n\t\"./stex/stex.js\": [\n\t\t51,\n\t\t128\n\t],\n\t\"./stylus/stylus.js\": [\n\t\t56,\n\t\t6\n\t],\n\t\"./swift/swift.js\": [\n\t\t141,\n\t\t129\n\t],\n\t\"./tcl/tcl.js\": [\n\t\t142,\n\t\t130\n\t],\n\t\"./textile/textile.js\": [\n\t\t143,\n\t\t131\n\t],\n\t\"./tiddlywiki/tiddlywiki.js\": [\n\t\t144,\n\t\t132\n\t],\n\t\"./tiki/tiki.js\": [\n\t\t145,\n\t\t133\n\t],\n\t\"./toml/toml.js\": [\n\t\t146,\n\t\t134\n\t],\n\t\"./tornado/tornado.js\": [\n\t\t147,\n\t\t1,\n\t\t2,\n\t\t36\n\t],\n\t\"./troff/troff.js\": [\n\t\t148,\n\t\t135\n\t],\n\t\"./ttcn-cfg/ttcn-cfg.js\": [\n\t\t150,\n\t\t136\n\t],\n\t\"./ttcn/ttcn.js\": [\n\t\t149,\n\t\t137\n\t],\n\t\"./turtle/turtle.js\": [\n\t\t151,\n\t\t138\n\t],\n\t\"./twig/twig.js\": [\n\t\t152,\n\t\t46\n\t],\n\t\"./vb/vb.js\": [\n\t\t153,\n\t\t139\n\t],\n\t\"./vbscript/vbscript.js\": [\n\t\t154,\n\t\t140\n\t],\n\t\"./velocity/velocity.js\": [\n\t\t155,\n\t\t141\n\t],\n\t\"./verilog/verilog.js\": [\n\t\t156,\n\t\t142\n\t],\n\t\"./vhdl/vhdl.js\": [\n\t\t157,\n\t\t143\n\t],\n\t\"./vue/vue.js\": [\n\t\t158,\n\t\t1,\n\t\t2,\n\t\t6,\n\t\t4,\n\t\t12\n\t],\n\t\"./webidl/webidl.js\": [\n\t\t159,\n\t\t144\n\t],\n\t\"./xml/xml.js\": [\n\t\t37,\n\t\t145\n\t],\n\t\"./xquery/xquery.js\": [\n\t\t160,\n\t\t146\n\t],\n\t\"./yacas/yacas.js\": [\n\t\t161,\n\t\t147\n\t],\n\t\"./yaml-frontmatter/yaml-frontmatter.js\": [\n\t\t162,\n\t\t55\n\t],\n\t\"./yaml/yaml.js\": [\n\t\t53,\n\t\t148\n\t],\n\t\"./z80/z80.js\": [\n\t\t163,\n\t\t149\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 58;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}