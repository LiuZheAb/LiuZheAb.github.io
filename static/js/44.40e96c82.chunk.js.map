{"version":3,"sources":["components/Documents/FreeCodeCamp/0.js","components/Directory/index.js"],"names":["index","props","state","articleTree","getArticleTree","bind","childrens","document","getElementsByClassName","children","i","length","nodeName","id","innerText","push","name","tag","this","setState","className","href","target","rel","Component","bindHandleScroll","event","scrollTop","srcElement","documentElement","window","pageYOffset","body","scrollToAnchor","anchorName","anchorElement","getElementById","scrollIntoView","block","behavior","header","before","scrollY","directory","offsetTop","addEventListener","onscroll","footer","H","offsetParent","s","offsetHeight","style","after","removeEventListener","array","targetObj","targetIndex","findIndex","n","map","key","title","paddingLeft","onClick","nextProps","prevState"],"mappings":"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","file":"static/js/44.40e96c82.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Directory from \"../../Directory\";\r\n\r\nexport default class index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            articleTree: []\r\n        };\r\n        this.getArticleTree = this.getArticleTree.bind(this);\r\n    }\r\n    getArticleTree() {\r\n        let childrens = document.getElementsByClassName(\"article-content\")[0].children;\r\n        let articleTree = [];\r\n        for (let i = 0; i < childrens.length - 1; i++) {\r\n            let nodeName = childrens[i].nodeName;\r\n            if (nodeName === \"H2\" || nodeName === \"H3\") {\r\n                childrens[i].id = childrens[i].innerText;\r\n                articleTree.push({\r\n                    name: childrens[i].innerText,\r\n                    tag: childrens[i].nodeName\r\n                });\r\n            }\r\n        }\r\n        this.setState({ articleTree });\r\n    }\r\n    componentDidMount() {\r\n        this.getArticleTree();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"page-content\">\r\n                <div className=\"article\">\r\n                    <div className=\"article-title\">\r\n                        <h1>简介</h1>\r\n                    </div>\r\n                    <div className=\"article-content\">\r\n                        <h2>写在前面</h2>\r\n                        <p className=\"indent-2\">FreeCodeCamp是Github上star最多的项目,免费编码学习社区。官方地址:<a href=\"https://www.freecodecamp.org\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.freecodecamp.org</a></p>\r\n                        <p className=\"indent-2\">本文档主要是记录学到的内容。</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"directory\">\r\n                    <Directory articleTree={this.state.articleTree}></Directory>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","//文档右侧标题导航\r\nimport React, { Component, } from 'react';\r\nimport \"./index.less\";\r\n\r\nexport default class index extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            articleTree: this.props.articleTree,\r\n            scrollTop: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        //页面滚动到文档末尾时，将directory逐渐向上隐藏\r\n        let header = document.getElementById(\"header\");\r\n        let before = window.scrollY;\r\n        let directory = document.getElementsByClassName(\"directory-list\")[0];\r\n        //offsetTop为页面加载时directory距顶端的距离\r\n        let offsetTop = directory.offsetTop;\r\n        window.addEventListener('scroll', this.bindHandleScroll);\r\n        window.onscroll = function () {\r\n            let footer = document.getElementsByClassName(\"page-footer\")[0], H = 0;\r\n            while (footer) {\r\n                //H为footer距顶端的距离\r\n                H += footer.offsetTop;\r\n                footer = footer.offsetParent;\r\n            }\r\n            let s = document.body.scrollTop || document.documentElement.scrollTop;\r\n            //s为当前滚动距离加offsetTop加directory高度,即directory底端距顶部的距离\r\n            s = s + (offsetTop + directory.offsetHeight);\r\n            //当s超出H时,directory向上收起\r\n            if (s > H + header.offsetHeight) {\r\n                directory.style = `position:fixed;top:${offsetTop - s + H}px;transition:none`;\r\n            } else {\r\n                // 在s<=H时,若向下滚动时,滚动距离超过header高度将header收起;向上滚动则将header显示,并且directory随header平移\r\n                let after = window.scrollY;\r\n                if (after > header.offsetHeight) {\r\n                    if (before < after) {\r\n                        header.className = \"ant-layout-header header header-affixed\";\r\n                        directory.className = \"directory-list directory-affixed\"\r\n                        before = after;\r\n                    };\r\n                    if (before > after) {\r\n                        header.className = \"ant-layout-header header header-visible\";\r\n                        directory.className = \"directory-list\"\r\n                        before = after;\r\n                    };\r\n                }\r\n                directory.style = \"\";\r\n            }\r\n        }\r\n    }\r\n    //获取滚动条滚动的高度\r\n    bindHandleScroll = (event) => {\r\n        const scrollTop = (event.srcElement ? event.srcElement.documentElement.scrollTop : false)\r\n            || window.pageYOffset\r\n            || (event.srcElement ? event.srcElement.body.scrollTop : 0);\r\n        this.setState({ scrollTop });\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.bindHandleScroll);\r\n    }\r\n    //点击directory跳转到锚点\r\n    scrollToAnchor = (anchorName) => {\r\n        if (anchorName) {\r\n            let anchorElement = document.getElementById(anchorName);\r\n            if (anchorElement) {\r\n                anchorElement.scrollIntoView({\r\n                    block: 'start',\r\n                    behavior: 'smooth'\r\n                });\r\n            }\r\n        }\r\n    }\r\n    //当props发生变化时改变articleTree\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        const { articleTree } = nextProps;\r\n        if (articleTree !== prevState.articleTree) {\r\n            return {\r\n                articleTree,\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        let { articleTree, scrollTop } = this.state;\r\n        let length = articleTree.length;\r\n        if (document.getElementById(`tree-num-0`) && length > 0) {\r\n            let array = [];\r\n            //array内为所有锚点的offsetTop,从小到大排列\r\n            for (let i = 0; i < length; i++) {\r\n                let targetObj = document.getElementById(articleTree[i].name);\r\n                array.push(targetObj.offsetTop);\r\n            }\r\n            //targetIndex为array中第一个大于当前滚动距离的值的index,通过offsetTop判断当前滚动到哪个锚点,并改变对应的标题导航样式。\r\n            let targetIndex = array.findIndex((n) => n > scrollTop) - 1;\r\n            for (let i = 0; i < length; i++) {\r\n                i === targetIndex ? document.getElementById(`tree-num-${i}`).className = \"tree-num directory-item-active\" : document.getElementById(`tree-num-${i}`).className = \"tree-num\";\r\n            }\r\n            //当滚动距离超过最后一个锚点时,array中找不到,返回-1\r\n            if (targetIndex === -2) {\r\n                document.getElementById(`tree-num-${length - 1}`).className = \"tree-num directory-item-active\";\r\n            }\r\n        }\r\n        return (\r\n            <ul className=\"directory-list\">\r\n                {articleTree.map((key, index) => {\r\n                    return (\r\n                        <li key={index} id={`tree-num-${index}`} className=\"tree-num\" title={key.name} style={{ paddingLeft: key.tag === \"H2\" ? 10 : 22 }} onClick={() => { this.scrollToAnchor(`${key.name}`) }}>{key.name}</li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}