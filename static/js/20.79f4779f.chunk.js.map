{"version":3,"sources":["../node_modules/codemirror/mode/django/django.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/addon/mode/overlay.js"],"names":["CodeMirror","defineMode","keywords","filters","operators","wordOperators","tokenBase","stream","state","match","tokenize","inVariable","inTag","inComment","next","inString","delimiter","previousTokenizer","escapeNext","eat","waitDot","peek","waitProperty","Error","waitPipe","waitFilter","eatSpace","foundVariable","keywordMatch","blockCommentTag","inBlockComment","skipToEnd","RegExp","join","startState","token","blockCommentStart","blockCommentEnd","config","htmlBase","getMode","djangoInner","overlayMode","defineMIME","mod","require","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","indentUnit","defaults","htmlMode","prop","inText","chain","parser","ch","inBlock","eatWhile","doctype","depth","baseState","tagName","tagStart","test","quote","closure","eol","isInAttribute","inAttribute","stringStartCol","column","style","terminator","Context","startOfLine","this","prev","context","indent","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","sol","indentation","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","configuration","helperType","skipAttribute","xmlCurrentTag","name","close","xmlCurrentContext","cx","push","reverse","mimeModes","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","regexp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","parserConfig","tags","configTags","configScript","scriptTypes","matches","mode","html","htmlState","toLowerCase","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","search","backUp","maybeBackup","copyState","local","line","innerMode","base","overlay","combine","basePos","baseCur","overlayPos","overlayCur","streamSeen","Math","min","start","pos","combineTokens","electricChars","blankLine","baseToken","overlayToken"],"mappings":"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","file":"static/js/20.79f4779f.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"),\n        require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\",\n            \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"django:inner\", function() {\n    var keywords = [\"block\", \"endblock\", \"for\", \"endfor\", \"true\", \"false\", \"filter\", \"endfilter\",\n                    \"loop\", \"none\", \"self\", \"super\", \"if\", \"elif\", \"endif\", \"as\", \"else\", \"import\",\n                    \"with\", \"endwith\", \"without\", \"context\", \"ifequal\", \"endifequal\", \"ifnotequal\",\n                    \"endifnotequal\", \"extends\", \"include\", \"load\", \"comment\", \"endcomment\",\n                    \"empty\", \"url\", \"static\", \"trans\", \"blocktrans\", \"endblocktrans\", \"now\",\n                    \"regroup\", \"lorem\", \"ifchanged\", \"endifchanged\", \"firstof\", \"debug\", \"cycle\",\n                    \"csrf_token\", \"autoescape\", \"endautoescape\", \"spaceless\", \"endspaceless\",\n                    \"ssi\", \"templatetag\", \"verbatim\", \"endverbatim\", \"widthratio\"],\n        filters = [\"add\", \"addslashes\", \"capfirst\", \"center\", \"cut\", \"date\",\n                   \"default\", \"default_if_none\", \"dictsort\",\n                   \"dictsortreversed\", \"divisibleby\", \"escape\", \"escapejs\",\n                   \"filesizeformat\", \"first\", \"floatformat\", \"force_escape\",\n                   \"get_digit\", \"iriencode\", \"join\", \"last\", \"length\",\n                   \"length_is\", \"linebreaks\", \"linebreaksbr\", \"linenumbers\",\n                   \"ljust\", \"lower\", \"make_list\", \"phone2numeric\", \"pluralize\",\n                   \"pprint\", \"random\", \"removetags\", \"rjust\", \"safe\",\n                   \"safeseq\", \"slice\", \"slugify\", \"stringformat\", \"striptags\",\n                   \"time\", \"timesince\", \"timeuntil\", \"title\", \"truncatechars\",\n                   \"truncatechars_html\", \"truncatewords\", \"truncatewords_html\",\n                   \"unordered_list\", \"upper\", \"urlencode\", \"urlize\",\n                   \"urlizetrunc\", \"wordcount\", \"wordwrap\", \"yesno\"],\n        operators = [\"==\", \"!=\", \"<\", \">\", \"<=\", \">=\"],\n        wordOperators = [\"in\", \"not\", \"or\", \"and\"];\n\n    keywords = new RegExp(\"^\\\\b(\" + keywords.join(\"|\") + \")\\\\b\");\n    filters = new RegExp(\"^\\\\b(\" + filters.join(\"|\") + \")\\\\b\");\n    operators = new RegExp(\"^\\\\b(\" + operators.join(\"|\") + \")\\\\b\");\n    wordOperators = new RegExp(\"^\\\\b(\" + wordOperators.join(\"|\") + \")\\\\b\");\n\n    // We have to return \"null\" instead of null, in order to avoid string\n    // styling as the default, when using Django templates inside HTML\n    // element attributes\n    function tokenBase (stream, state) {\n      // Attempt to identify a variable, template or comment tag respectively\n      if (stream.match(\"{{\")) {\n        state.tokenize = inVariable;\n        return \"tag\";\n      } else if (stream.match(\"{%\")) {\n        state.tokenize = inTag;\n        return \"tag\";\n      } else if (stream.match(\"{#\")) {\n        state.tokenize = inComment;\n        return \"comment\";\n      }\n\n      // Ignore completely any stream series that do not match the\n      // Django template opening tags.\n      while (stream.next() != null && !stream.match(/\\{[{%#]/, false)) {}\n      return null;\n    }\n\n    // A string can be included in either single or double quotes (this is\n    // the delimiter). Mark everything as a string until the start delimiter\n    // occurs again.\n    function inString (delimiter, previousTokenizer) {\n      return function (stream, state) {\n        if (!state.escapeNext && stream.eat(delimiter)) {\n          state.tokenize = previousTokenizer;\n        } else {\n          if (state.escapeNext) {\n            state.escapeNext = false;\n          }\n\n          var ch = stream.next();\n\n          // Take into account the backslash for escaping characters, such as\n          // the string delimiter.\n          if (ch == \"\\\\\") {\n            state.escapeNext = true;\n          }\n        }\n\n        return \"string\";\n      };\n    }\n\n    // Apply Django template variable syntax highlighting\n    function inVariable (stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        }\n\n        // Dot followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for property.\");\n        }\n      }\n\n      // Attempt to match a pipe that precedes a filter\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        }\n\n        // Pipe followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for filter.\");\n        }\n      }\n\n      // Highlight properties\n      if (state.waitProperty) {\n        state.waitProperty = false;\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true;  // A property can be followed by another property\n          state.waitPipe = true;  // A property can be followed by a filter\n          return \"property\";\n        }\n      }\n\n      // Highlight filters\n      if (state.waitFilter) {\n          state.waitFilter = false;\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      }\n\n      // Ignore all white spaces\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      }\n\n      // Identify numbers\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      }\n\n      // Identify strings\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      }\n\n      // Attempt to find the variable\n      if (stream.match(/\\b(\\w+)\\b/) && !state.foundVariable) {\n        state.waitDot = true;\n        state.waitPipe = true;  // A property can be followed by a filter\n        return \"variable\";\n      }\n\n      // If found closing tag reset\n      if (stream.match(\"}}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        state.tokenize = tokenBase;\n        return \"tag\";\n      }\n\n      // If nothing was found, advance to the next character\n      stream.next();\n      return \"null\";\n    }\n\n    function inTag (stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        }\n\n        // Dot followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for property.\");\n        }\n      }\n\n      // Attempt to match a pipe that precedes a filter\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        }\n\n        // Pipe followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for filter.\");\n        }\n      }\n\n      // Highlight properties\n      if (state.waitProperty) {\n        state.waitProperty = false;\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true;  // A property can be followed by another property\n          state.waitPipe = true;  // A property can be followed by a filter\n          return \"property\";\n        }\n      }\n\n      // Highlight filters\n      if (state.waitFilter) {\n          state.waitFilter = false;\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      }\n\n      // Ignore all white spaces\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      }\n\n      // Identify numbers\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      }\n\n      // Identify strings\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      }\n\n      // Attempt to match an operator\n      if (stream.match(operators)) {\n        return \"operator\";\n      }\n\n      // Attempt to match a word operator\n      if (stream.match(wordOperators)) {\n        return \"keyword\";\n      }\n\n      // Attempt to match a keyword\n      var keywordMatch = stream.match(keywords);\n      if (keywordMatch) {\n        if (keywordMatch[0] == \"comment\") {\n          state.blockCommentTag = true;\n        }\n        return \"keyword\";\n      }\n\n      // Attempt to match a variable\n      if (stream.match(/\\b(\\w+)\\b/)) {\n        state.waitDot = true;\n        state.waitPipe = true;  // A property can be followed by a filter\n        return \"variable\";\n      }\n\n      // If found closing tag reset\n      if (stream.match(\"%}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        // If the tag that closes is a block comment tag, we want to mark the\n        // following code as comment, until the tag closes.\n        if (state.blockCommentTag) {\n          state.blockCommentTag = false;  // Release the \"lock\"\n          state.tokenize = inBlockComment;\n        } else {\n          state.tokenize = tokenBase;\n        }\n        return \"tag\";\n      }\n\n      // If nothing was found, advance to the next character\n      stream.next();\n      return \"null\";\n    }\n\n    // Mark everything as comment inside the tag and the tag itself.\n    function inComment (stream, state) {\n      if (stream.match(/^.*?#\\}/)) state.tokenize = tokenBase\n      else stream.skipToEnd()\n      return \"comment\";\n    }\n\n    // Mark everything as a comment until the `blockcomment` tag closes.\n    function inBlockComment (stream, state) {\n      if (stream.match(/\\{%\\s*endcomment\\s*%\\}/, false)) {\n        state.tokenize = inTag;\n        stream.match(\"{%\");\n        return \"tag\";\n      } else {\n        stream.next();\n        return \"comment\";\n      }\n    }\n\n    return {\n      startState: function () {\n        return {tokenize: tokenBase};\n      },\n      token: function (stream, state) {\n        return state.tokenize(stream, state);\n      },\n      blockCommentStart: \"{% comment %}\",\n      blockCommentEnd: \"{% endcomment %}\"\n    };\n  });\n\n  CodeMirror.defineMode(\"django\", function(config) {\n    var htmlBase = CodeMirror.getMode(config, \"text/html\");\n    var djangoInner = CodeMirror.getMode(config, \"django:inner\");\n    return CodeMirror.overlayMode(htmlBase, djangoInner);\n  });\n\n  CodeMirror.defineMIME(\"text/x-django\", \"django\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        if (cx.tagName) context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter, line) {\n      return base.indent(state.base, textAfter, line);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n"],"sourceRoot":""}