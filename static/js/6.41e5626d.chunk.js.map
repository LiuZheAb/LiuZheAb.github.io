{"version":3,"sources":["components/PageFooter/index.js"],"names":["index","this","props","dataSource","recommandData","nameMap","setKeyMap","check","num","obj","key","pathSnippets","location","pathname","split","filter","i","length","lastStr","Number","href","prevHref","nextHref","prev","to","className","section","next","style","position","type","value","window","url","title","fontSize","baseHref","arr","count","temp","shuffled","slice","min","Math","floor","random","getRandomArrayElements","map","item","target","rel","color","Component","withRouter"],"mappings":"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","file":"static/js/6.41e5626d.chunk.js","sourcesContent":["//文档底部footer\r\nimport React, { Component } from 'react'\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport IconFont from \"../IconFont\";\r\nimport { WeiboShareButton } from \"react-share\";\r\nimport QRCode from \"qrcode.react\";\r\nimport setKeyMap from \"../../utils/keymap\";\r\nimport \"./index.less\";\r\n\r\nclass index extends Component {\r\n    render() {\r\n        let { dataSource, recommandData } = this.props;\r\n        //获取数组中count个随机值\r\n        function getRandomArrayElements(arr, count) {\r\n            var shuffled = arr.slice(0), i = arr.length, min = i - count, temp, index;\r\n            while (i-- > min) {\r\n                index = Math.floor((i + 1) * Math.random());\r\n                temp = shuffled[index];\r\n                shuffled[index] = shuffled[i];\r\n                shuffled[i] = temp;\r\n            }\r\n            return shuffled.slice(min);\r\n        }\r\n        const nameMap = setKeyMap([dataSource]);\r\n        //查找当前文档所处section\r\n        let check = (num, obj) => {\r\n            for (let key in obj) {\r\n                if (num >= obj[key][0] && num <= obj[key][1] && obj[key][0] !== obj[key][1]) return key + \"——\";\r\n            }\r\n        }\r\n        //将pathname以\"/\"分割,并保存到数组中\r\n        const pathSnippets = this.props.location.pathname.split('/').filter(i => i);\r\n        let length = pathSnippets.length, lastStr = Number(pathSnippets[length - 1]), href = \"/\" + pathSnippets[length - 2] + \"/\";\r\n        //上一页/下一页路由\r\n        let prevHref = href + (lastStr - 1);\r\n        let nextHref = href + (lastStr + 1);\r\n        const prev = nameMap[prevHref] ?\r\n            <Link to={prevHref} className=\"pager\">\r\n                <div className=\"label\">上一篇</div>\r\n                <span className=\"title\">{check(lastStr - 1, dataSource.section)}{nameMap[prevHref]}</span>\r\n            </Link>\r\n            : null\r\n        const next = nameMap[nextHref] ?\r\n            <Link to={nextHref} className=\"pager\">\r\n                <div className=\"label\">下一篇</div>\r\n                <span className=\"title\">{check(lastStr + 1, dataSource.section)}{nameMap[nextHref]}</span>\r\n            </Link>\r\n            : null\r\n        return (\r\n            <div className=\"page-footer\">\r\n                <div className=\"share\">\r\n                    <div>\r\n                        <div className=\"wx-icon\" style={{ position: \"relative\" }}>\r\n                            <IconFont type=\"iconweixin\" />\r\n                            <div className=\"qrcode\" >\r\n                                <div className=\"arrow\"></div>\r\n                                <div className=\"inner\">微信扫码阅读文档<QRCode value={window.location.href} /></div>\r\n                            </div>\r\n                        </div>\r\n                        <WeiboShareButton url={window.location.href} title={dataSource.title + \"——\" + nameMap[this.props.location.pathname]} ><IconFont type=\"iconweibo\" style={{ fontSize: \"40px\" }} /></WeiboShareButton>\r\n                    </div>\r\n                    如果觉得这篇文章有帮助的话,就分享一下吧,谢谢~\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className=\"prev\">{prev}</div>\r\n                    <div className=\"next\">{next}</div>\r\n                </div>\r\n                <div className=\"connect\">\r\n                    <div className=\"book\">\r\n                        <span className=\"from\">本文来自</span>\r\n                        <div className=\"icon\"><IconFont type=\"iconbook\" style={{ fontSize: \"40px\" }} /></div>\r\n                        <div className=\"name\"><h4><Link to={dataSource.baseHref}>{dataSource.title}</Link></h4></div>\r\n                    </div>\r\n                    {getRandomArrayElements(recommandData, 2).map((item, index) => {\r\n                        return (\r\n                            <div className=\"book\" key={index}>\r\n                                <span className=\"from\">精品推荐</span>\r\n                                <div className=\"icon\"><IconFont type=\"iconbook\" style={{ fontSize: \"40px\" }} /></div>\r\n                                <div className=\"name\"><h4><Link to={item.baseHref}>{item.title}</Link></h4></div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    <div className=\"othersites\">\r\n                        <span>我的其他站点：</span>\r\n                        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://music.163.com/#/playlist?id=117824494\" title=\"网易云音乐\"><IconFont type=\"iconwyy\" /></a>\r\n                        <a target=\"_blank\" style={{ fontSize: \"34px\", color: \"#000\" }} rel=\"noopener noreferrer\" href=\"https://github.com/LiuZheAb/\" title=\"Github\"><IconFont type=\"icongithub\" /></a>\r\n                        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.yuque.com/liuzheab\" title=\"语雀\"><IconFont type=\"iconyuquemianlogo\" /></a>\r\n                    </div>\r\n                    <div className=\"author\">\r\n                        <div className=\"author-content\">\r\n                            <span>&copy; 2020 Deved By <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/LiuZheAb/\" title=\"Github\">LiuZheAb</a> </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(index);"],"sourceRoot":""}